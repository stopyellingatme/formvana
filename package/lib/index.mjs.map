{"version":3,"file":"index.mjs","sources":["../../node_modules/.pnpm/svelte@3.38.2/node_modules/svelte/internal/index.mjs","../../node_modules/.pnpm/svelte@3.38.2/node_modules/svelte/store/index.mjs","core/FieldConfig.ts","utilities/formUtilities.ts","utilities/formLayout.ts","utilities/linkMethods.ts","utilities/formState.ts","utilities/formValidation.ts","utilities/formSetup.ts","core/Types.ts","core/Form.ts","../../node_modules/.pnpm/reflect-metadata@0.1.13/node_modules/reflect-metadata/Reflect.js","core/Decorators.ts","core/FormManager.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { SvelteComponent } from \"svelte\";\r\nimport { get, writable, Writable } from \"svelte/store\";\r\nimport { field } from \"./Decorators\";\r\nimport {\r\n  AcceptedDataType,\r\n  Callback,\r\n  FieldAttributes,\r\n  FieldNode,\r\n  OnEvents,\r\n  ReferenceDataItem,\r\n  ValidationCallback,\r\n  ValidationError\r\n} from \"./Types\";\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * FieldConfig is used to help with the form auto generation functionality.\r\n *\r\n * This is not meant to be a complete HTML Input/Select/etc replacement.\r\n * It is simply a vehicle to help give the form generator\r\n * an easy-to-use format to work with.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\nexport class FieldConfig<T extends Object> {\r\n  constructor(name: keyof T, init?: Partial<FieldConfig<T>>) {\r\n    if (name) {\r\n      this.name = name;\r\n    } else {\r\n      throw new Error(\r\n        \"{name: string} is required for FieldConfig intialization.\"\r\n      );\r\n    }\r\n\r\n    /** I know, Object.assign... lots of freedom there. */\r\n    if (init) Object.assign(this, init);\r\n\r\n    /** Is value Writable store? */\r\n    if (!this.value || !(<Writable<any>>this.value).subscribe) {\r\n      /** If it's not, make it a writable store. */\r\n      this.value = writable(this.value);\r\n    }\r\n\r\n    /**\r\n     * I'm doing this because there's not enough thought about accessibility\r\n     * in Forms or for libraries. Better to have SOME kind of default than none\r\n     * at all.\r\n     * So, if there's no aria-label and the title attribute is present...\r\n     */\r\n    if (!this.attributes[\"aria-label\"] && this.attributes[\"title\"]) {\r\n      /** Set aria-label = title */\r\n      this.attributes[\"aria-label\"] = this.attributes[\"title\"];\r\n    } else if (!this.attributes[\"aria-label\"]) {\r\n      /** If no aria-label then set it to the label or if !label then name */\r\n      this.attributes[\"aria-label\"] = this.label || this.name;\r\n    }\r\n\r\n    /**\r\n     * If required is passed in then make sure the attributes reflect that\r\n     * the field is required.\r\n     */\r\n    if (this.required) {\r\n      this.attributes[\"required\"] = true;\r\n      this.attributes[\"aria-required\"] = true;\r\n    }\r\n\r\n    /**\r\n     * This is here becuase i spent ~45min trying to figure out why the\r\n     * file explorer would not open when I clicked the file input label.\r\n     * Well, it's because it needs an Id, not just a name. Duh.\r\n     */\r\n    if (this.data_type === \"file\" || this.data_type === \"files\") {\r\n      if (!this.attributes[\"id\"]) this.attributes[\"id\"] = this.name;\r\n    }\r\n\r\n    if (this.data_set) this.setDataSet(this.data_set);\r\n  }\r\n\r\n  /**\r\n   * Name of the class property.\r\n   * Only set \"name\" if you are using FieldConfig apart from\r\n   * your object/model.\r\n   * I.e. you are using plain JSON rather than a TS class.\r\n   */\r\n  readonly name: keyof T;\r\n\r\n  /**\r\n   * HTML Element which the field is attached to.\r\n   * Attached using the form.useField method.\r\n   */\r\n  node?: FieldNode<T>;\r\n\r\n  /**\r\n   * el can be either String or Svelte Component.\r\n   * This allows us a more flexible dynamic field generator.\r\n   * Using a template also allows you to style each input as needed.\r\n   */\r\n  selector?: string | SvelteComponent;\r\n\r\n  /** Value is a writable store defaulting to undefined. */\r\n  value: Writable<any> = writable(undefined);\r\n\r\n  /**\r\n   * This is the DATA TYPE of the value!\r\n   * If set to number (or decimal, or int, etc.) it will be parsed as number.\r\n   * If the type is not accounted for in this library, we return the original\r\n   * event.target.value.\r\n   *\r\n   * This is not the input.type.\r\n   *\r\n   * Defaults to \"string\"\r\n   */\r\n  data_type: AcceptedDataType = \"string\";\r\n\r\n  /**\r\n   * Validation Errors!\r\n   * We're mainly looking in the \"errors\" field.\r\n   * One ValidationError object can have multiple errors.\r\n   */\r\n  errors: Writable<ValidationError | undefined> = writable(undefined);\r\n\r\n  /**\r\n   * Attributes uses a fairly exhaustive map of most HTML Field-ish\r\n   * attributes.\r\n   *\r\n   * You also have the option to use a plain Object, for extra flexibility.\r\n   *\r\n   * @example attributes[\"type\"] get's set here.\r\n   *\r\n   * @example attrubutes[\"description\"] passes type-check without being a FieldAttribute\r\n   * but still gives you type-completion on any known attribute.\r\n   */\r\n  attributes: Partial<FieldAttributes> | Record<string | number | symbol, any> =\r\n    {};\r\n\r\n  /** Has the input been altered? */\r\n  touched: Writable<boolean> = writable(false);\r\n\r\n  /** Is this a required field? */\r\n  required?: boolean;\r\n  /** Label can be sting or array of strings */\r\n  label?: string | string[];\r\n  /** Hint can be sting or array of strings */\r\n  hint?: string | string[];\r\n\r\n  /** Linked to form.refs via ReferenceData[ref_key] */\r\n  ref_key?: string;\r\n  /** Used if there is a set of \"options\" to choose from. */\r\n  options?: ReferenceDataItem[];\r\n\r\n  /** Pretty self-explainitory, disable the field. */\r\n  disabled?: boolean;\r\n  /** Pretty self-explainitory, hide the field. */\r\n  hidden?: boolean;\r\n\r\n  /**\r\n   * * If you set this, you must set form.for_form!\r\n   *\r\n   * In case you'd like to filter some fields for a specific form\r\n   *\r\n   * @example if you have a class to use on multiple forms, but want to\r\n   * use this specific field on one form instead of other. Or whatever.\r\n   */\r\n  for_form?: string | string[];\r\n\r\n  /**\r\n   * You may need to excude some event listeners.\r\n   *\r\n   * @example exclude blur and focus events for a checkbox\r\n   */\r\n  exclude_events?: Array<keyof OnEvents<HTMLElementEventMap>>;\r\n\r\n  /**\r\n   * You may need to excude some event listeners.\r\n   *\r\n   * @example exclude blur and focus events for a checkbox\r\n   */\r\n  include_events?: Array<keyof OnEvents<HTMLElementEventMap>>;\r\n\r\n  /** Are you grouping multiple fields togethter? */\r\n  group?: number | string | string[];\r\n  /**\r\n   * Step is used when field is part of a multi-step form.\r\n   */\r\n  step?: number | string;\r\n\r\n  /**\r\n   * @TODO Add hooks for this when setting up field.\r\n   *\r\n   * Element.dataset hook, so you can do the really wild things!\r\n   */\r\n  data_set?: Record<string, any>;\r\n\r\n  /** Is the field valid? */\r\n  public get valid(): boolean {\r\n    if (!get(this.errors)) return true;\r\n    return false;\r\n  }\r\n\r\n  setErrors = (errors: ValidationError): FieldConfig<T> => {\r\n    this.errors.set(errors);\r\n    return this;\r\n  };\r\n\r\n  /** Clear the field's errors */\r\n  clearErrors = (): FieldConfig<T> => {\r\n    this.errors.set(undefined);\r\n    return this;\r\n  };\r\n\r\n  /** Add event listeners to the field in a more typesafe way. */\r\n  addEventListener = (\r\n    event: keyof HTMLElementEventMap | Array<keyof HTMLElementEventMap>,\r\n    callback: ValidationCallback | Callback\r\n  ) => {\r\n    if (this.node) {\r\n      if (Array.isArray(event)) {\r\n        event.forEach((_event) => {\r\n          this.node &&\r\n            this.node.addEventListener(\r\n              _event,\r\n              /** Check if the callback is directly executable */\r\n              (e: InputEvent | Event) =>\r\n                callback instanceof Function ? callback(e) : callback,\r\n              /** No extra options being passed in */\r\n              false\r\n            );\r\n        });\r\n      } else {\r\n        this.node.addEventListener(\r\n          event,\r\n          /** Check if the callback is directly executable */\r\n          (e: InputEvent | Event) =>\r\n            callback instanceof Function ? callback(e) : callback,\r\n          /** No extra options being passed in */\r\n          false\r\n        );\r\n      }\r\n    } else {\r\n      throw new Error(\r\n        \"Node is missing! There is no Html Node to attach event listener too!\"\r\n      );\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** Remove event listeners from the field in a more typesafe way. */\r\n  removeEventListener = (\r\n    event: keyof HTMLElementEventMap | Array<keyof HTMLElementEventMap>,\r\n    callback: ValidationCallback | Callback\r\n  ) => {\r\n    if (this.node) {\r\n      if (Array.isArray(event)) {\r\n        event.forEach((_event) => {\r\n          this.node &&\r\n            this.node.removeEventListener(\r\n              _event,\r\n              /** Check if the callback is directly executable */\r\n              (e: InputEvent | Event) =>\r\n                callback instanceof Function ? callback(e) : callback,\r\n              /** No extra options being passed in */\r\n              false\r\n            );\r\n        });\r\n      } else {\r\n        this.node.removeEventListener(\r\n          event,\r\n          /** Check if the callback is directly executable */\r\n          (e: InputEvent | Event) =>\r\n            callback instanceof Function ? callback(e) : callback,\r\n          /** No extra options being passed in */\r\n          false\r\n        );\r\n      }\r\n    } else {\r\n      throw new Error(\r\n        \"Node is missing! There is no Html Node to attach event listener too!\"\r\n      );\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * This will fire the an HTMLElementEventMap event.\r\n   *\r\n   * @example you want to manually fire the change event\r\n   */\r\n  emitEvent(event_name: keyof HTMLElementEventMap): boolean | undefined {\r\n    const event = new Event(event_name);\r\n    return this.node?.dispatchEvent(event);\r\n  }\r\n\r\n  /** Use this if you're altering the data_set property */\r\n  setDataSet(data: Record<string, any>) {\r\n    this.data_set = data;\r\n    if (this.data_set) {\r\n      let k: keyof Record<string, any>;\r\n      for (k in this.data_set) {\r\n        this.node && (this.node.dataset[k] = this.data_set[k]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}\r\n","import { get } from \"svelte/store\";\r\nimport { ValidationError } from \"../core/Types\";\r\nimport { FieldConfig } from \"../core/FieldConfig\";\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * *** General Form Utilities ***\r\n *\r\n * Will write later. Files delted and source control didnt catch.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\n/** Get the form field by name */\r\nfunction _get<T extends Object>(\r\n  name: keyof T,\r\n  fields: FieldConfig<T>[]\r\n): FieldConfig<T> {\r\n  return fields.filter((f) => f.name === name)[0];\r\n}\r\n\r\n/**\r\n * Set any attributes on the given fields.\r\n */\r\nfunction _setFieldAttributes<T extends Object>(\r\n  target_fields: Array<keyof T>,\r\n  fields: FieldConfig<T>[],\r\n  attributes: Partial<FieldConfig<T>>\r\n): void {\r\n  let i = 0,\r\n    len = target_fields.length;\r\n  if (len === 0) return;\r\n  const all_field_names = fields.map((f) => f.name);\r\n\r\n  for (; len > i; ++i) {\r\n    const field_index = all_field_names.indexOf(target_fields[i]);\r\n\r\n    if (field_index !== -1) {\r\n      const field_name = all_field_names[field_index];\r\n\r\n      _setFieldAttribute(field_name, fields, attributes);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Set any attributes on the given field.\r\n */\r\nfunction _setFieldAttribute<T extends Object>(\r\n  name: keyof T,\r\n  fields: FieldConfig<T>[],\r\n  attributes: Partial<FieldConfig<T>>\r\n): void {\r\n  /**  Get field config */\r\n  const f: FieldConfig<T> = _get(name, fields);\r\n  /**  Loop over key of Partial FieldConfig */\r\n  let k: keyof typeof attributes;\r\n  for (k in attributes) {\r\n    /**  If we hit the attributes property then we set the field.attributes */\r\n    if (k === \"attributes\") {\r\n      Object.assign(f.attributes, attributes[k]);\r\n    } else if (k !== \"name\") {\r\n      /**  \"name\" is readonly on FieldConfig */\r\n      setFieldProperty(f, k, attributes[k]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Initially created to deal with TS compiler errors.\r\n * Dynamically assigning a value to f[key] wouldn't play nice.\r\n */\r\nfunction setFieldProperty<T extends Object, K extends keyof FieldConfig<T>>(\r\n  f: FieldConfig<T>,\r\n  key: K,\r\n  value: FieldConfig<T>[K]\r\n) {\r\n  f[key] = value;\r\n}\r\n\r\nexport { _get, _setFieldAttributes, _setFieldAttribute };\r\n","import { FieldConfig } from \"../core\";\r\nimport { _get } from \"./formUtilities\";\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * *** Form Layout ***\r\n *\r\n * Will write later. Files delted and source control didnt catch.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * I wanted a way to handle field groups in an effective but lightweight\r\n * manner. I believe this achieves that goal.\r\n *\r\n *\r\n */\r\nfunction _hanldeFieldGroups<T extends Object>(\r\n  fields: Array<FieldConfig<T>>\r\n): Array<FieldConfig<T> | Array<FieldConfig<T>>> {\r\n  if (fields && fields.length > 0) {\r\n    /**\r\n     * Use a blank object to store/map field groups.\r\n     */\r\n    let field_groups: Record<string, any> = {};\r\n    /** This sets up the return type to be easily itterable. */\r\n    const getSortedFields = () => {\r\n      /** Array for storing the field config or array of field configs */\r\n      const new_fields: Array<FieldConfig<T> | Array<FieldConfig<T>>> = [];\r\n      Object.keys(field_groups).forEach((key) => {\r\n        new_fields.push(field_groups[key]);\r\n      });\r\n      /** Return our crazy array structure. */\r\n      return new_fields;\r\n    };\r\n\r\n    /** is the field.group in the field_groups map already? */\r\n    const isGroupInFieldGroups = (group_name: string): boolean => {\r\n      if (Array.isArray(field_groups[group_name])) return true;\r\n      /** If we made it here, there was no match */\r\n      return false;\r\n    };\r\n\r\n    for (let i = 0; fields.length > i; ++i) {\r\n      const field = fields[i];\r\n      /** Is the field part of a group? */\r\n      if (field.group) {\r\n        if (Array.isArray(field.group)) {\r\n          field.group.forEach((name) => {\r\n            /**\r\n             * Have we already created a group (in our object above)\r\n             * for the field.group?\r\n             */\r\n            const isInGroupResult = isGroupInFieldGroups(name);\r\n            if (isInGroupResult) {\r\n              field_groups[name].push(field);\r\n            } else {\r\n              /**\r\n               * If not, we add key for the field.gorup and initialize\r\n               * it with an array of the field.\r\n               * We use the array so we can add more fields later when we\r\n               * find more fields with the same group name.\r\n               */\r\n              field_groups[name] = [field];\r\n            }\r\n          });\r\n        } else if (typeof field.group === \"string\") {\r\n          /**\r\n           * Have we already created a group (in our object above)\r\n           * for the field.group?\r\n           */\r\n          const isInGroupResult = isGroupInFieldGroups(field.group);\r\n          if (isInGroupResult) {\r\n            field_groups[field.group].push(field);\r\n          } else {\r\n            /**\r\n             * If not, we add key for the field.gorup and initialize\r\n             * it with an array of the field.\r\n             * We use the array so we can add more fields later when we\r\n             * find more fields with the same group name.\r\n             */\r\n            field_groups[field.group] = [field];\r\n          }\r\n        }\r\n      } else {\r\n        /**\r\n         * If the field does not have a group then we use this identifier\r\n         * to ensure all fields stay in order after this manipulation.\r\n         */\r\n        field_groups[`field_${i}`] = field;\r\n      }\r\n    }\r\n\r\n    const _fields = getSortedFields();\r\n    return _fields;\r\n  } else {\r\n    return fields;\r\n  }\r\n}\r\n\r\n/**\r\n * Using this.field_order, rearrange the order of the fields.\r\n */\r\nfunction _setFieldOrder<T extends Object>(\r\n  field_order: Array<keyof T>,\r\n  fields: FieldConfig<T>[]\r\n): FieldConfig<T>[] {\r\n  let newLayout: FieldConfig<T>[] = [];\r\n  let leftovers: FieldConfig<T>[] = [];\r\n  /** Loop over the order... */\r\n  field_order.forEach((name) => {\r\n    const field = _get(name, fields);\r\n    /** If the field.name and the order name match... */\r\n    if (field.name === name) {\r\n      /** Then push it to the fields array */\r\n      newLayout.push(field);\r\n    } else if (\r\n      leftovers.indexOf(field) === -1 &&\r\n      field_order.indexOf(field.name as keyof T) === -1\r\n    ) {\r\n      /** Field is not in the order, so push it to bottom of order. */\r\n      leftovers.push(field);\r\n    }\r\n  });\r\n  fields = [...newLayout, ...leftovers];\r\n  return fields;\r\n}\r\n\r\nexport { _hanldeFieldGroups, _setFieldOrder };\r\n\r\n","import { get } from \"svelte/store\";\r\nimport { FieldConfig } from \"../core/FieldConfig\";\r\nimport {\r\n  ElementEvent,\r\n  FieldNode,\r\n  ValidationError,\r\n  ValidationProperties\r\n} from \"../core/Types\";\r\nimport { _get } from \"./formUtilities\";\r\nconst max_int = Number.MAX_SAFE_INTEGER;\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * *** Linking Methods ***\r\n *\r\n * This section handles linking values and errors.\r\n * Nearly all of functions are hot paths or part of hot paths.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\n//#region Error Linking\r\n\r\n/**\r\n * Link form.errors to it's corresponding field.errors\r\n * Via error[field_name]\r\n *\r\n * @Hotpath\r\n */\r\nfunction _linkFieldErrors<T extends Object>(\r\n  errors: ValidationError[],\r\n  field: FieldConfig<T>,\r\n  error_display?: ValidationProperties<T>[\"error_display\"],\r\n  form_node?: HTMLFormElement\r\n): void {\r\n  const error = errors.filter((e) => e[\"field_key\"] === field.name);\r\n\r\n  /** Used when we _handleErrorDisplay */\r\n  let field_error = undefined;\r\n\r\n  /** Check if there's an error for the field */\r\n  if (error && error.length > 0) {\r\n    field.setErrors(error[0]).node?.setAttribute(\"aria-invalid\", \"true\");\r\n    field_error = error[0];\r\n  } else {\r\n    /**  Remove errors from field and hanlde error display.  */\r\n    field.clearErrors().node?.removeAttribute(\"aria-invalid\");\r\n  }\r\n\r\n  if (error_display && form_node)\r\n    _handleErrorDisplay(field, field_error, error_display, form_node);\r\n}\r\n\r\n/**\r\n * Link all Validation Errors on Form.errors to each field via the\r\n * field_error_link_name.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _linkAllErrors<T extends Object>(\r\n  errors: ValidationError[],\r\n  fields: FieldConfig<T>[],\r\n  error_display?: ValidationProperties<T>[\"error_display\"],\r\n  form_node?: HTMLFormElement\r\n): void {\r\n  /** Loop over the errors! */\r\n  errors.forEach((err) => {\r\n    /**\r\n     * If error[field_key] is truthy, attach the error to the\r\n     * field[field_key (name)]\r\n     */\r\n    if (err[\"field_key\"]) {\r\n      const field = _get(err[\"field_key\" as keyof ValidationError], fields);\r\n      field.errors.set(err);\r\n      if (error_display && form_node)\r\n        _handleErrorDisplay(field, err, error_display, form_node);\r\n    }\r\n  });\r\n  /** Get all fields with errors. */\r\n  const fields_with_errors = errors.map((e) => e.field_key);\r\n  /** Go through each field and check if the field is in the error map. */\r\n  fields.forEach((field) => {\r\n    /** If not, then remove the all errors from the field. */\r\n    if (!errors || !fields_with_errors.includes(field.name as string)) {\r\n      field.clearErrors().node?.removeAttribute(\"aria-invalid\");\r\n      if (error_display && form_node)\r\n        _handleErrorDisplay(field, undefined, error_display, form_node);\r\n    }\r\n  });\r\n}\r\n\r\nfunction _handleErrorDisplay<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  error: ValidationError | undefined,\r\n  error_display: ValidationProperties<T>[\"error_display\"],\r\n  form_node: HTMLFormElement\r\n): void {\r\n  if (error_display === \"constraint\") {\r\n    /** Constraint implementation goes here */\r\n    _handleConstraintValidation(field, error, form_node);\r\n  } else if (error_display === \"custom\") {\r\n    /**\r\n     * If \"custom\", the library user will have to create their own component\r\n     * to show validation errors.\r\n     */\r\n    return;\r\n  } else if (typeof error_display === \"object\") {\r\n    /** If there is only one error message */\r\n    _handleDomErrorDisplay(field, error, error_display, form_node);\r\n  }\r\n}\r\n\r\nfunction _handleConstraintValidation<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  error: ValidationError | undefined,\r\n  form_node: HTMLFormElement\r\n) {\r\n  if (error && error.errors) {\r\n    const message: Record<string, string> = error.errors;\r\n    Object.keys(message).forEach((key) => {\r\n      field.node?.setCustomValidity(`${key}: ${message[key]}`);\r\n    });\r\n  } else {\r\n    field.node?.setCustomValidity(\"\");\r\n  }\r\n  form_node.reportValidity();\r\n}\r\n\r\n/**\r\n * This one is pretty harry.\r\n * There is a lot going on in this function but almost everything is commented.\r\n * I'm sure there's room for improvement down there somewhere.\r\n */\r\nfunction _handleDomErrorDisplay<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  error: ValidationError | undefined,\r\n  error_display: ValidationProperties<T>[\"error_display\"],\r\n  form_node: HTMLFormElement\r\n) {\r\n  if (typeof error_display === \"object\")\r\n    if (error_display.dom.type === \"span\") {\r\n      _handleDomSingleErrorDisplay(field, error, error_display, form_node);\r\n    } else if (\r\n      error_display.dom.type === \"ol\" ||\r\n      error_display.dom.type === \"ul\"\r\n    ) {\r\n      _handleDomListErrorDisplay(field, error, error_display, form_node);\r\n    }\r\n}\r\n\r\n/**\r\n * It works. It's fast. And it works.\r\n * But it's not the easiest thing to read.\r\n *\r\n * What's going on here?\r\n * Well we want to make error display as easy as possible while still offering\r\n * a level of customization.\r\n * This function handles the display of errors in a list attached to an element\r\n * with data-error-for={field.name}.\r\n * The error.field_key attaches to the field with field_key === field.name.\r\n *\r\n * @TODO Clean this up. But maintain verbosity, if possible. No crazy one liners.\r\n */\r\nfunction _handleDomListErrorDisplay<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  error: ValidationError | undefined,\r\n  error_display: ValidationProperties<T>[\"error_display\"],\r\n  form_node: HTMLFormElement\r\n) {\r\n  if (typeof error_display === \"object\") {\r\n    const error_element_id = `___error-list-item-for-${field.name}`;\r\n\r\n    if (error && error.errors) {\r\n      const messages = Object.keys(error.errors).map(\r\n        (key) => error.errors && error.errors[key]\r\n      );\r\n\r\n      /** Have we already created an error node element for the given field? */\r\n      const error_node = form_node.querySelector(`#${error_element_id}`);\r\n      /** If so, we only update the list items */\r\n      if (error_node) {\r\n        /** Remove all list item elements from list parent */\r\n        const children = error_node.querySelectorAll(\"li\");\r\n        children.forEach((child) => {\r\n          error_node?.removeChild(child);\r\n        });\r\n        /** Loop over error messages */\r\n        for (let i = 0; messages.length > i; ++i) {\r\n          const message = messages[i],\r\n            message_element = document.createElement(\"li\"),\r\n            text_node = document.createTextNode(message || \"\");\r\n\r\n          message_element.appendChild(text_node);\r\n          _setErrorElementStyling(error_display, message_element);\r\n\r\n          error_node.appendChild(message_element);\r\n        }\r\n      } else {\r\n        /** Add new error element and add errors to list */\r\n        const list_element = document.createElement(error_display.dom.type);\r\n        /** If there are classes for the error list wrapper, apply them */\r\n        error_display.dom.wrapper_classes &&\r\n          list_element.classList.add(...error_display.dom.wrapper_classes);\r\n        /** Add an id to the element so we can grab it later */\r\n        list_element.id = error_element_id;\r\n        /** Loop over error messages. */\r\n        for (const message of messages) {\r\n          /** Create a list item to add the error message into */\r\n          const message_element = document.createElement(\"li\"),\r\n            /** Create a text node with the error message */\r\n            text_node = document.createTextNode(message || \"\");\r\n          /** Append text node to the new list item element */\r\n          message_element.appendChild(text_node);\r\n          /** Apply any classes being passed in through config */\r\n          _setErrorElementStyling(error_display, message_element);\r\n          /** Add the new list item to the parent list element */\r\n          list_element.appendChild(message_element);\r\n        }\r\n        /** Append the list element to the error_node element */\r\n        _getErrorNode(field, form_node)?.appendChild(list_element);\r\n      }\r\n    } else {\r\n      /** No field errors! */\r\n      /** Get the error node from the field */\r\n      const node = _getErrorNode(field, form_node);\r\n      if (node) {\r\n        node.childNodes.forEach((n) => {\r\n          node.removeChild(n);\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _setErrorElementStyling<T extends Object>(\r\n  error_display: ValidationProperties<T>[\"error_display\"],\r\n  message_element: HTMLLIElement\r\n) {\r\n  if (typeof error_display === \"object\") {\r\n    if (error_display.dom.error_classes)\r\n      message_element.classList.add(...error_display.dom?.error_classes);\r\n\r\n    if (error_display.dom.error_styles)\r\n      message_element.setAttribute(\r\n        \"style\",\r\n        error_display.dom.error_styles?.join(\"; \")\r\n      );\r\n  }\r\n}\r\n\r\nfunction _handleDomSingleErrorDisplay<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  error: ValidationError | undefined,\r\n  error_display: ValidationProperties<T>[\"error_display\"],\r\n  form_node: HTMLFormElement\r\n) {\r\n  if (typeof error_display === \"object\")\r\n    if (error && error.errors) {\r\n      const message = Object.keys(error.errors)\r\n        .map((key) => error.errors && error.errors[key])\r\n        .join(\"\");\r\n\r\n      /** Get the error node and check if we already have a span element added */\r\n      const error_node = _getErrorNode(field, form_node),\r\n        node = error_node?.querySelector(\"span\");\r\n\r\n      /** If se, we just update the textContent with the error message */\r\n      if (node) {\r\n        node.textContent = message;\r\n      } else {\r\n        /** Create the span element to append text */\r\n        const span = document.createElement(\"span\");\r\n        span.setAttribute(\"aria-live\", \"polite\");\r\n        /** Add a text node and append the message. */\r\n        const text_node = document.createTextNode(message);\r\n        span.appendChild(text_node);\r\n        /** Add any extra classes for styling */\r\n        error_display.dom.error_classes &&\r\n          error_node?.classList.add(...error_display.dom.error_classes);\r\n        /** Add the span to the field's node - which the field.name is attached */\r\n        error_node?.appendChild(span);\r\n      }\r\n    } else {\r\n      const error_node = _getErrorNode(field, form_node);\r\n\r\n      if (error_node) {\r\n        error_node.childNodes.forEach((n) => {\r\n          error_node.removeChild(n);\r\n        });\r\n      }\r\n    }\r\n}\r\n\r\nfunction _getErrorNode<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  form_node: HTMLFormElement\r\n) {\r\n  let node: FieldNode<T> | Element | undefined | null;\r\n  /** Check if there are data-error-for datasets attached to any elements */\r\n  form_node.querySelectorAll(\"[data-error-for]\").forEach((el) => {\r\n    /** If so, check if the errorFor value is for the current field */\r\n    /** @ts-ignore */\r\n    if (el.dataset && el.dataset[\"errorFor\"] === field.name) node = el;\r\n  });\r\n  if (field.node?.parentElement?.nodeName !== \"LABEL\") {\r\n    /** If no node is found, just pin to the field's parent element. */\r\n    if (!node) node = field.node?.parentElement;\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Value Linking\r\n\r\n/**\r\n * Link values from FIELDS to MODEL or MODEL to FIELDS\r\n *\r\n * @Hotpath\r\n */\r\nfunction _linkAllValues<T extends Object>(\r\n  from_fields_to_model: boolean,\r\n  fields: FieldConfig<T>[],\r\n  model: T\r\n): void {\r\n  fields.forEach((field) => {\r\n    /** Get name and value of the field */\r\n    const name = field.name,\r\n      val = field.value;\r\n\r\n    if (from_fields_to_model) {\r\n      /**  Link field[values] to model[values] */\r\n      model[name as keyof T] = get(val);\r\n    } else {\r\n      /**  Link form.model[values] to the form.fields[values] */\r\n      val.set(model[name as keyof T]);\r\n      /** @ts-ignore */\r\n      if (field.node && (field.node.value || field.node.value === 0)) {\r\n        if (model[name as keyof T]) {\r\n          /** @ts-ignore */\r\n          field.node.value = model[name as keyof T];\r\n        } else {\r\n          /** @ts-ignore */\r\n          field.node.value = \"\";\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Link the event value to the target field and model.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _linkValueFromEvent<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  model: T,\r\n  event?: ElementEvent\r\n): void {\r\n  const value = _getValueFromEvent(event, field);\r\n  /**\r\n   * Well, we have to set both.\r\n   * This compensates for native select elements and probably more.\r\n   */\r\n  model[field.name] = value;\r\n  field.value.set(value);\r\n}\r\n\r\n/**\r\n * Ok, there's a lot going on here.\r\n * But we're really just checking the data_type for special cases.\r\n *\r\n * Objects and arrays need special treatment.\r\n *\r\n * Check if the target has some special value properties to help us out.\r\n * If not, just grab the target.value and move on.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _getValueFromEvent<T extends Object>(\r\n  event?: ElementEvent,\r\n  field?: FieldConfig<T>\r\n): any | undefined {\r\n  if (event && event.target) {\r\n    if (field) {\r\n      /**\r\n       * Yeah, we do a lot of checking in this bitch.\r\n       * Deep fucking ribbit hole.\r\n       */\r\n      switch (field.data_type) {\r\n        case \"string\" || \"text\":\r\n          return event.target.value;\r\n        case \"number\":\r\n          return _parseNumberOrValue(event.target.value);\r\n        case \"boolean\":\r\n          return Boolean(event.target.value);\r\n        case \"array\":\r\n          return _parseArray(event, field);\r\n        case \"file\" || \"files\":\r\n          return _parseFileInput(event);\r\n      }\r\n    } else return event.target.value;\r\n\r\n    /** If none of the above conditions apply, just retrun the value */\r\n    return event.target.value;\r\n  } else return undefined;\r\n}\r\n\r\nfunction _parseFileInput(event: ElementEvent) {\r\n  /** @ts-ignore */\r\n  if (event.target.files) {\r\n    /** @ts-ignore */\r\n    const files: FileList | undefined = event.target.files;\r\n    if (files && files.length === 1) {\r\n      return files.item(0);\r\n    } else if (files && files.length > 1) {\r\n      return Object.values(files);\r\n    } else if (files && files.length == 0) {\r\n      return event.target.value;\r\n    }\r\n    return files;\r\n  }\r\n  return event.target.value;\r\n}\r\n\r\nfunction _parseArray<T extends Object>(\r\n  event: ElementEvent,\r\n  field: FieldConfig<T>\r\n) {\r\n  let vals = get(field.value) ? [...get(field.value)] : [],\r\n    target_value = event.target.value;\r\n  /**\r\n   * If the target is checked and the target value isn't in the field.value\r\n   * then add the target value to the field value.\r\n   */\r\n  if (vals.indexOf(target_value) === -1) {\r\n    vals.push(target_value);\r\n  } else {\r\n    /** Else remove the target.value from the field.value */\r\n    vals.splice(vals.indexOf(target_value), 1);\r\n  }\r\n  /** Return the array of values */\r\n  return vals;\r\n}\r\n\r\n/**\r\n * Check if the value is a (safe) intiger.\r\n * Because the event value will happily pass the number 1 as\r\n * \"1\", a string. So we parse it, check it, and if it's safe, return it.\r\n * Otherwise just return the initial value.\r\n *\r\n * We check if the value is not a number or if the value (as a number)\r\n * is greater than the max number value.\r\n *\r\n * If either is true, return plain value.\r\n * Else return value as number.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _parseNumberOrValue(value: any): Number | any | undefined {\r\n  if (\r\n    value === \"\" ||\r\n    value === undefined ||\r\n    value === null ||\r\n    typeof value === \"undefined\" ||\r\n    /**\r\n     * This is needed when a null or undefined value is attached\r\n     * to a select option value.\r\n     */\r\n    value === \"undefined\" ||\r\n    value === \"null\"\r\n  )\r\n    return undefined;\r\n  if (isNaN(+value) || +value >= max_int || +value <= -max_int) return value;\r\n  else return +value;\r\n}\r\n\r\n/**\r\n * Tried to implement this in a nice way, but there are too many gotcha's.\r\n * Plus, JS likes to return event target values as string.\r\n * So even if the dev set the input.value to the object, it would come in\r\n * through the event target value as \"[object Object]\" anyways.\r\n */\r\n// function _parseObject<T extends Object>(\r\n//   event: ElementEvent,\r\n//   field: FieldConfig<T>\r\n// ) {\r\n//   console.log(\"PARSE OBJECT: \", event.target.value);\r\n\r\n//   if (\r\n//     typeof event.target.value === \"string\" &&\r\n//     event.target.value === \"[object Object]\"\r\n//   )\r\n//     return event.target.value;\r\n\r\n//   let vals: Record<string, any> = JSON.parse(get(field.value));\r\n//   const value: Record<string, any> = JSON.parse(event.target.value);\r\n\r\n//   let key: keyof typeof value;\r\n//   for (key in value) {\r\n//     if (!vals[key] || vals[key] === 0) {\r\n//       vals[key] = value[key];\r\n//     } else {\r\n//       delete vals[key];\r\n//     }\r\n//   }\r\n//   /** Return the array of values */\r\n//   return JSON.stringify(vals);\r\n// }\r\n\r\n//#endregion\r\n\r\nexport {\r\n  _linkAllErrors,\r\n  _linkFieldErrors,\r\n  _linkValueFromEvent,\r\n  _linkAllValues,\r\n};\r\n\r\n","import { Writable, get } from \"svelte/store\";\r\nimport { FieldConfig, Form, InitialFormState } from \"../core\";\r\nimport { _linkAllValues, _linkAllErrors } from \"./linkMethods\";\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * *** Form State ***\r\n *\r\n * Will write later. Files delted and source control didnt catch.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Helper function for value_change emitter.\r\n * Write the form's value changes to form.value_changes.\r\n *\r\n * @Hotpath\r\n *\r\n * @param changes incoming value changes\r\n * @param field field emitting the changes\r\n */\r\nfunction _setValueChanges<T extends Object>(\r\n  changes: Writable<Record<keyof T | any, T[keyof T]>>,\r\n  field: FieldConfig<T>\r\n): void {\r\n  const _changes = get(changes);\r\n\r\n  /** Is the change is on the same field? */\r\n  if (_changes[field.name]) {\r\n    _changes[field.name] = get(field.value);\r\n    changes.set({ ..._changes });\r\n  } else {\r\n    /** Or is the change on a different field? */\r\n    changes.set({ ..._changes, [field.name]: get(field.value) });\r\n  }\r\n}\r\n\r\n/**\r\n * Is the current form state different than the initial state?\r\n *\r\n * I've tested it with ~ 1000 fields in a single class with very slight input lag.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _hasStateChanged(\r\n  value_changes: Writable<Record<string, any>>,\r\n  changed: Writable<boolean>\r\n): void {\r\n  // const changes = get(value_changes) !== {} ? get(value_changes) : null;\r\n  const changes = get(value_changes);\r\n\r\n  if (changes && changes !== {} && Object.keys(changes).length > 0) {\r\n    changed.set(true);\r\n    return;\r\n  }\r\n  changed.set(false);\r\n}\r\n\r\n/**\r\n * Grab a snapshot of several items that generally define the state of the form\r\n * and serialize them into a format that's easy-ish to check/deserialize (for resetting)\r\n */\r\nfunction _setInitialState<T extends Object>(\r\n  form: Form<T>,\r\n  initial_state: InitialFormState<T>\r\n): InitialFormState<T> {\r\n  Object.assign(initial_state.model, form.model);\r\n\r\n  /**\r\n   * Well, we have to check if there are any nested objects and stringify them\r\n   * to disconnect the values from the initial Object.assign, above.\r\n   */\r\n  if (initial_state.model) {\r\n    Object.keys(initial_state.model).forEach((key) => {\r\n      if (initial_state.model)\r\n        serializeObject(\r\n          initial_state.model,\r\n          key as keyof typeof initial_state.model\r\n        );\r\n    });\r\n  }\r\n\r\n  if (form.errors && form.errors.length > 0) {\r\n    initial_state.errors = [...form.errors];\r\n  } else {\r\n    initial_state.errors = [];\r\n  }\r\n  return initial_state;\r\n}\r\n\r\nfunction serializeObject<T>(incoming_model: T, key: keyof T) {\r\n  if (incoming_model && typeof incoming_model[key] === \"object\") {\r\n    incoming_model[key] = JSON.parse(JSON.stringify(incoming_model[key]));\r\n  }\r\n}\r\n\r\n/**\r\n * Reset form to inital state.\r\n */\r\nfunction _resetState<T extends Object>(\r\n  form: Form<T>,\r\n  initial_state: InitialFormState<T>\r\n): void {\r\n  /** !CANNOT OVERWRITE MODEL. VALIDATION GETS FUCKED UP! */\r\n  Object.assign(form.model, initial_state.model);\r\n\r\n  if (form.model) {\r\n    Object.keys(form.model).forEach((key) => {\r\n      if (form.model) serializeObject(form.model, key as keyof T);\r\n    });\r\n  }\r\n\r\n  /** Clear the form errors before assigning initial_state.errors */\r\n  form.clearErrors();\r\n  if (initial_state.errors && initial_state.errors.length > 0) {\r\n    form.errors = [...initial_state.errors];\r\n  } else {\r\n    form.errors = [];\r\n  }\r\n  /** Done serializing the initial_state, now link everything. */\r\n\r\n  /** Link the values, now */\r\n  _linkAllValues(false, form.fields, form.model);\r\n\r\n  /** Reset all field touches, too. */\r\n  form.fields.forEach((f) => f.touched.set(false));\r\n\r\n  /** \r\n   * If there were errors in the inital_state\r\n   * link them to each field\r\n   */\r\n  if (form.node) {\r\n    _linkAllErrors(\r\n      form.errors,\r\n      form.fields,\r\n      form.validation_options?.error_display,\r\n      form.node\r\n    );\r\n  }\r\n  /** Reset the value changes and the \"changed\" store */\r\n  form.value_changes.set({});\r\n  form.changed.set(false);\r\n}\r\n\r\nexport { _setValueChanges, _hasStateChanged, _setInitialState, _resetState };\r\n","import { get } from \"svelte/store\";\r\nimport {\r\n  Callback,\r\n  ElementEvent,\r\n  FieldConfig,\r\n  Form,\r\n  ValidationCallback,\r\n  ValidationError\r\n} from \"../core\";\r\nimport { _hasStateChanged, _setValueChanges } from \"./formState\";\r\nimport {\r\n  _linkAllErrors,\r\n  _linkFieldErrors,\r\n  _linkValueFromEvent\r\n} from \"./linkMethods\";\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * *** Form Validation ***\r\n *\r\n * Will write later. Files delted and source control didnt catch.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Hanlde the events that will fire for each field.\r\n * Corresponds to the form.on_events field.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _executeValidationEvent<T extends Object>(\r\n  form: Form<T>,\r\n  required_fields: Array<keyof T>,\r\n  field?: FieldConfig<T>,\r\n  callbacks?: ValidationCallback[],\r\n  event?: ElementEvent\r\n): Promise<ValidationError[]> | undefined {\r\n  /** The form has been altered (no longer pristine) */\r\n  form.pristine.set(false);\r\n  /** If field && it hasn't been marked as touched... touch it. */\r\n  if (field && !get(field.touched)) field.touched.set(true);\r\n\r\n  /** Execute pre-validation callbacks */\r\n  _executeCallbacks([\r\n    field && _linkValueFromEvent(field, form.model, event),\r\n\r\n    /** Execution step may need work */\r\n    field && _setValueChanges(form.value_changes, field),\r\n    callbacks && _executeValidationCallbacks(\"before\", callbacks),\r\n  ]);\r\n\r\n  /**\r\n   * @TODO This section needs a rework.\r\n   * Too many moving parts.\r\n   * Hard to pass in custom validation parameters.\r\n   *\r\n   * If validation options are present, use them.\r\n   * Else, just fire the callbacks and be done.\r\n   */\r\n  if (\r\n    form.validation_options &&\r\n    form.validation_options.options &&\r\n    form.validation_options.validator\r\n  ) {\r\n    return form.validation_options\r\n      .validator(form.model, form.validation_options.options)\r\n      .then((errors: ValidationError[]) => {\r\n        _executeCallbacks([\r\n          _handleValidationSideEffects(form, errors, required_fields, field),\r\n          _hasStateChanged(form.value_changes, form.changed),\r\n          callbacks && _executeValidationCallbacks(\"after\", callbacks),\r\n        ]);\r\n        return errors;\r\n      });\r\n  } else if (\r\n    form.validation_options &&\r\n    form.validation_options.validator &&\r\n    !form.validation_options.options\r\n  ) {\r\n    return form.validation_options\r\n      .validator(form.model)\r\n      .then((errors: ValidationError[]) => {\r\n        _executeCallbacks([\r\n          _handleValidationSideEffects(form, errors, required_fields, field),\r\n          _hasStateChanged(form.value_changes, form.changed),\r\n          callbacks && _executeValidationCallbacks(\"after\", callbacks),\r\n        ]);\r\n        return errors;\r\n      });\r\n  } else {\r\n    _executeCallbacks([\r\n      _hasStateChanged(form.value_changes, form.changed),\r\n      callbacks && _executeValidationCallbacks(\"after\", callbacks),\r\n    ]);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Execute validation callbacks, depending on when_to_call\r\n * @Hotpath\r\n */\r\nfunction _executeValidationCallbacks(\r\n  when_to_call: \"before\" | \"after\",\r\n  callbacks: ValidationCallback[]\r\n): void {\r\n  if (callbacks && callbacks.length > 0)\r\n    callbacks.forEach((cb) => {\r\n      if (cb.when === when_to_call) {\r\n        _callFunction(cb.callback);\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * Check if the callback is a function and execute it accordingly\r\n * @Hotpath\r\n */\r\nfunction _callFunction(cb: Callback) {\r\n  if (cb instanceof Function) {\r\n    cb();\r\n  } else {\r\n    () => cb;\r\n  }\r\n}\r\n\r\n/**\r\n * This is used to add functions and callbacks to the OnEvent\r\n * handler. Functions can be added in a plugin-style manner now.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _executeCallbacks(callbacks: Callback | Callback[]): void {\r\n  /** Is it an Array of callbacks? */\r\n  if (Array.isArray(callbacks)) {\r\n    callbacks.forEach((cb) => {\r\n      _callFunction(cb);\r\n    });\r\n  } else {\r\n    _callFunction(callbacks);\r\n  }\r\n}\r\n\r\n/**\r\n * Handle all the things associated with validation!\r\n * Link the errors to the fields.\r\n * Check if all required fields are valid.\r\n * Link values from fields to model if\r\n * form.when_link_fields_to_model === LinkOnEvent.Valid is true.\r\n *\r\n * @Hotpath\r\n */\r\nasync function _handleValidationSideEffects<T extends Object>(\r\n  form: Form<T>,\r\n  errors: ValidationError[],\r\n  required_fields: Array<keyof T>,\r\n  field?: FieldConfig<T>\r\n): Promise<ValidationError[]> {\r\n  /**  There are errors! */\r\n  if (errors && errors.length > 0) {\r\n    form.errors = errors;\r\n\r\n    /**  Are we validating the whole form or just the fields? */\r\n    if (field && form.node) {\r\n      /**  Link errors to field (to show validation errors) */\r\n      _linkFieldErrors(\r\n        errors,\r\n        field,\r\n        form.validation_options?.error_display,\r\n        form.node\r\n      );\r\n    } else if (form.node) {\r\n      /**  This is validation for the whole form! */\r\n      _linkAllErrors(\r\n        errors,\r\n        form.fields,\r\n        form.validation_options?.error_display,\r\n        form.node\r\n      );\r\n    }\r\n\r\n    /**  All required fields are valid? */\r\n    if (_requiredFieldsValid(errors, required_fields)) {\r\n      form.valid.set(true);\r\n    } else {\r\n      form.valid.set(false);\r\n    }\r\n  } else {\r\n    /** We can't get here unless the errors we see are for non-required fields */\r\n    /**  Are we validating the whole form or just the fields? */\r\n    if (field && form.node) {\r\n      /**  Link errors to field (to show validation errors) */\r\n      _linkFieldErrors(\r\n        errors,\r\n        field,\r\n        form.validation_options?.error_display,\r\n        form.node\r\n      );\r\n    } else if (form.node) {\r\n      /**  This is validation for the whole form! */\r\n      _linkAllErrors(\r\n        errors,\r\n        form.fields,\r\n        form.validation_options?.error_display,\r\n        form.node\r\n      );\r\n    }\r\n    form.clearErrors(); /** Clear form errors */\r\n    form.valid.set(true); /** Form is valid! */\r\n  }\r\n  return errors;\r\n}\r\n\r\n/**\r\n * @TODO Clean up this requiredFieldsValid implementation. Seems too clunky.\r\n *\r\n * Check if there are any required fields in the errors.\r\n * If there are no required fields in the errors, the form is valid.\r\n *\r\n * @Hotpath\r\n */\r\nfunction _requiredFieldsValid<T extends Object>(\r\n  errors: ValidationError[],\r\n  required_fields: Array<keyof T>\r\n): boolean {\r\n  if (errors.length === 0) return true;\r\n  /** Go ahead and return if there are no errors */\r\n  let i = 0,\r\n    len = required_fields.length;\r\n  /** If there are no required fields, just go ahead and return */\r\n  if (len === 0) return true;\r\n  /**\r\n   * Otherwise we have to map the names of the errors so we can\r\n   * check if they're for a required field\r\n   */\r\n  const errs = errors.map((e) => e[\"field_key\"]);\r\n  for (; len > i; ++i) {\r\n    if (errs.indexOf(required_fields[i] as keyof ValidationError) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport {\r\n  _executeValidationEvent,\r\n  _executeCallbacks,\r\n  _handleValidationSideEffects,\r\n};\r\n\r\n","import {\r\n  Callback,\r\n  ElementEvent,\r\n  FieldConfig,\r\n  Form,\r\n  OnEvents,\r\n  ValidationCallback\r\n} from \"../core\";\r\nimport { _executeValidationEvent } from \"./formValidation\";\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * *** Form Setup ***\r\n *\r\n * Will write later. Files deleted and source control didnt catch.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Build the field configs from this.model using metadata-reflection.\r\n * Grab the editableProperties from the @field decorator.\r\n */\r\nfunction _buildFormFields<T extends Object>(\r\n  model: T,\r\n  for_form?: string,\r\n  props: string[] = Reflect.getMetadata(\"editableProperties\", model)\r\n): FieldConfig<T>[] {\r\n  /** Map the @field fields to the form.fields */\r\n  let fields = props.map((prop: string) => {\r\n    /** Get the @FieldConfig using metadata reflection */\r\n    const field: FieldConfig<T> = new FieldConfig<T>(prop as keyof T, {\r\n      ...Reflect.getMetadata(\"fieldConfig\", model, prop),\r\n      value: model[prop as keyof T],\r\n    });\r\n\r\n    /** We made it. Return the field config and let's generate some inputs! */\r\n    return field;\r\n  });\r\n\r\n  if (for_form) {\r\n    /** Filter fields used in a specific form */\r\n    fields = fields.filter(\r\n      (f) => f.for_form === undefined || for_form === f.for_form\r\n    );\r\n  }\r\n\r\n  return fields;\r\n}\r\n\r\nfunction _buildFormFieldsWithSchema<T extends Object>(\r\n  props: Record<string, Partial<FieldConfig<T>>>,\r\n  for_form?: string\r\n): FieldConfig<T>[] {\r\n  let k: keyof Record<string, Partial<FieldConfig<Object>>>,\r\n    fields = [];\r\n  for (k in props) {\r\n    const field: FieldConfig<T> = new FieldConfig<T>(k as keyof T, {\r\n      ...props[k],\r\n    });\r\n    fields.push(field);\r\n  }\r\n\r\n  if (for_form) {\r\n    /** Filter fields used in a specific form */\r\n    fields = fields.filter(\r\n      (f) => f.for_form === undefined || for_form === f.for_form\r\n    );\r\n  }\r\n\r\n  return fields;\r\n}\r\n\r\n// #region HTML Event Helpers\r\n\r\n/**\r\n * Attach the OnEvents events to each form.field.\r\n * Each field with a corresponding model.name will have event listeners\r\n * attached.\r\n * Children fields of the form, where useForm has been attached, will have\r\n * event listeners attached.\r\n */\r\nfunction _attachEventListeners<T extends Object>(\r\n  field: FieldConfig<T>,\r\n  on_events: OnEvents<HTMLElementEventMap>,\r\n  callback: Callback\r\n): void {\r\n  Object.entries(on_events).forEach(([event_name, should_listen]) => {\r\n    const filterListenerOnSelectElement = () => {\r\n      if (field.node?.nodeName === \"SELECT\" && event_name !== \"input\") {\r\n        field.addEventListener(\r\n          event_name as keyof HTMLElementEventMap,\r\n          callback\r\n        );\r\n      } else {\r\n        field.addEventListener(\r\n          event_name as keyof HTMLElementEventMap,\r\n          callback\r\n        );\r\n      }\r\n    };\r\n    /** If should_listen === true, then add the event listener */\r\n    if (should_listen) {\r\n      /**\r\n       * If should_listen === true... and...\r\n       * If field.exclude_events DOES NOT contain the event name\r\n       * THEN add the event listener to the field.\r\n       */\r\n      if (\r\n        !field.exclude_events?.includes(\r\n          event_name as keyof OnEvents<HTMLElementEventMap>\r\n        )\r\n      )\r\n        filterListenerOnSelectElement();\r\n    }\r\n\r\n    /**\r\n     * If the field.include_events includes the event_name\r\n     * then add that event listener to the field.\r\n     * Does NOT matter if should_listen is true || false.\r\n     */\r\n    if (\r\n      field.include_events?.includes(\r\n        event_name as keyof OnEvents<HTMLElementEventMap>\r\n      )\r\n    )\r\n      filterListenerOnSelectElement();\r\n  });\r\n}\r\n\r\nfunction _addCallbackToField<T extends Object>(\r\n  form: Form<T>,\r\n  field: FieldConfig<T>,\r\n  event: keyof HTMLElementEventMap,\r\n  callback: ValidationCallback | Callback,\r\n  required_fields: Array<keyof T>\r\n): void {\r\n  /** Check if callback is of type ValidationCallback */\r\n  if (callback && (<ValidationCallback>callback).when) {\r\n    field.addEventListener(\r\n      event,\r\n      _executeValidationEvent(form, required_fields, undefined, [\r\n        <ValidationCallback>callback,\r\n      ])\r\n    );\r\n  } else {\r\n    field.addEventListener(event, <Callback>callback);\r\n  }\r\n}\r\n\r\n/**\r\n * This is going to be a full on Form method I think.\r\n *\r\n * 1. use passive (only validate on form submission)\r\n *  until form is submitted.\r\n *  - Must detect if form has been submited.\r\n *\r\n * 2. If form is invalid, use aggressive until field is valid.\r\n *  - This is the hardest part.\r\n *\r\n * 3. When all valid, go back to passive validation.\r\n */\r\nfunction _handleEagerValidationSetup<T extends Object>(\r\n  form: Form<T>,\r\n  form_node: HTMLFormElement,\r\n  required_fields: (keyof T)[]\r\n) {\r\n  /**\r\n   * Add \"submit\" event listener so we detect when the user submits the form.\r\n   *  - This is for the \"passive\" stage\r\n   */\r\n  form_node.addEventListener(\"submit\", (event: Event) => {\r\n    console.log(\"Made it here\");\r\n\r\n    event.preventDefault();\r\n    form.validate();\r\n    /**\r\n     * If the form is not valid then prevent the default action\r\n     * and add aggressive event listeners to the invalid fields.\r\n     *\r\n     * When the field is valid, remove the aggressive listener.\r\n     */\r\n    if (!form.valid) {\r\n      const invalid_fields = form.fields.filter((f) => !f.valid),\r\n        first_invalid_field = invalid_fields[0],\r\n        aggressive_events: Array<keyof HTMLElementEventMap> = [\r\n          \"input\",\r\n          \"change\",\r\n          \"blur\",\r\n        ];\r\n      /** Focus on the first field. */\r\n      if (first_invalid_field) {\r\n        first_invalid_field.node?.focus();\r\n      }\r\n      /** Add aggressive event listeners to the invalid fields. */\r\n      invalid_fields.forEach((field) => {\r\n        const callback: Callback = (e: ElementEvent) =>\r\n          _executeValidationEvent(form, required_fields, field, undefined, e);\r\n        /**\r\n         * Now we have to detect when the field is valid and remove the\r\n         * aggressive event listeners\r\n         */\r\n        const aggressiveListenerCallback = () => {\r\n          /**\r\n           * If the field is valid, remove the aggressive event listeners as well as\r\n           * the aggressiveListenerCallback itself.\r\n           */\r\n          console.log(\"Validity: \", field.valid);\r\n\r\n          if (field.valid) {\r\n            console.log(\"Field is valid\");\r\n\r\n            field\r\n              .removeEventListener(aggressive_events, callback)\r\n              .removeEventListener(\r\n                aggressive_events,\r\n                aggressiveListenerCallback\r\n              );\r\n          }\r\n        };\r\n        field\r\n          .addEventListener(aggressive_events, callback)\r\n          .addEventListener(aggressive_events, aggressiveListenerCallback);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport {\r\n  _buildFormFields,\r\n  _buildFormFieldsWithSchema,\r\n  _attachEventListeners,\r\n  _addCallbackToField,\r\n  _handleEagerValidationSetup,\r\n};\r\n\r\n","import { FieldConfig } from \"./FieldConfig\";\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * *** Data Shapes (Types) ***\r\n *\r\n * Will write later. Files delted and source control didnt catch.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\n// #region Validation\r\n\r\n/** Using \"when\" gives us a little more flexibilty. */\r\nexport interface ValidationCallback {\r\n  callback: Callback;\r\n  /**\r\n   * When should the callback fire?\r\n   * \"before\" or \"after\" validation?\r\n   */\r\n  when: \"before\" | \"after\";\r\n}\r\n\r\n/** Pretty much any funciton as long as it returns a Promise with\r\n * Validation Error array.\r\n *\r\n * @TODO This needs work.\r\n */\r\nexport type ValidatorFunction = (...args: any[]) => Promise<ValidationError[]>;\r\n\r\n/**\r\n * All constructor values are optional so we can create a blank Validation\r\n * Error object, for whatever reason we need.\r\n * The error.field_key links to it's corresponding field.name\r\n */\r\nexport class ValidationError {\r\n  constructor(\r\n    field_name?: string,\r\n    errors?: { [type: string]: string },\r\n    extra_data?: Record<string, any>\r\n  ) {\r\n    if (field_name) this.field_key = field_name;\r\n    if (errors) this.errors = errors;\r\n    if (extra_data) Object.assign(this, extra_data);\r\n  }\r\n\r\n  field_key?: string;\r\n  field_value?: any;\r\n  errors?: {\r\n    [error_type: string]: string;\r\n  };\r\n}\r\n\r\n/** Form Validation Options  */\r\nexport interface ValidationProperties<ModelType extends Object> {\r\n  /**\r\n   * This is the (validation) function that will be called when validating.\r\n   * You can use any validation library you like, as long as this function\r\n   * takes the model and returns Promise<ValidationError[]>\r\n   */\r\n  validator: (\r\n    model: ModelType,\r\n    options?: Record<string, any> | Object\r\n  ) => Promise<ValidationError[]>;\r\n\r\n  /**\r\n   * THIS IS THE SECOND PARAMETER BEING PASSED TO THE VALIDATOR FUNCTION.\r\n   * The other is form.model.\r\n   *\r\n   * This makes using other validation libraries easier.\r\n   * See the examples for more details.\r\n   */\r\n  options?: Record<string, any> | Object;\r\n\r\n  /**\r\n   * How should the errors be displayed?\r\n   */\r\n  error_display:\r\n    | \"constraint\"\r\n    | {\r\n        dom: {\r\n          type: \"ul\" | \"ol\" | \"span\";\r\n\r\n          wrapper_classes?: string[];\r\n          wrapper_styles?: string[];\r\n\r\n          attributes?: string[];\r\n\r\n          error_classes?: string[];\r\n          error_styles?: string[];\r\n        };\r\n      }\r\n    | \"custom\";\r\n}\r\n\r\nexport class ValidationProperties<ModelType extends Object>\r\n  implements ValidationProperties<ModelType>\r\n{\r\n  constructor(\r\n    validator?: (\r\n      model: ModelType,\r\n      options?: Record<string, any> | Object\r\n    ) => Promise<ValidationError[]>,\r\n    options?: Record<string, any> | Object,\r\n    display?: ErrorDisplay,\r\n    properties?: Partial<ValidationProperties<ModelType>>\r\n  ) {\r\n    if (properties) Object.assign(this, properties);\r\n    if (validator) this.validator = validator;\r\n    if (options) this.options = options;\r\n    if (display) this.error_display = display;\r\n  }\r\n  /**\r\n   * This is the (validation) function that will be called when validating.\r\n   * You can use any validation library you like, as long as this function\r\n   * takes the model and returns Promise<ValidationError[]>\r\n   */\r\n  validator: (\r\n    model: ModelType,\r\n    options?: Record<string, any> | Object\r\n  ) => Promise<ValidationError[]> = async () => [];\r\n\r\n  /**\r\n   * THIS IS THE SECOND PARAMETER BEING PASSED TO THE VALIDATOR FUNCTION.\r\n   * The other is form.model.\r\n   *\r\n   * This makes using other validation libraries easier.\r\n   * See the examples for more details.\r\n   */\r\n  options?: Record<string, any> | Object;\r\n\r\n  /**\r\n   * How should the errors be displayed?\r\n   */\r\n  error_display: ErrorDisplay = { dom: { type: \"ul\" } };\r\n}\r\n\r\nexport type ErrorDisplay =\r\n  | \"constraint\"\r\n  | {\r\n      dom: {\r\n        type: \"ul\" | \"ol\" | \"span\";\r\n\r\n        wrapper_classes?: string[];\r\n        wrapper_styles?: string[];\r\n\r\n        attributes?: string[];\r\n\r\n        error_classes?: string[];\r\n        error_styles?: string[];\r\n      };\r\n    }\r\n  | \"custom\";\r\n\r\n//#endregion\r\n\r\n// #region Events\r\n/**\r\n * * Enabled By Default: blur, input, change, submit\r\n *\r\n * Determines which event listeners are added to each field.\r\n *\r\n * You can insert event listeners just by adding a [string]: boolean\r\n * to the constructor's init object.\r\n */\r\nexport class OnEvents<T extends HTMLElementEventMap> {\r\n  constructor(init?: Partial<OnEvents<T>>, disableAll: boolean = false) {\r\n    // If disableAll is false, turn off all event listeners\r\n    if (disableAll) {\r\n      let k: keyof OnEvents<T> | string;\r\n      for (k in this) {\r\n        this[k as keyof OnEvents<T>] = false;\r\n      }\r\n    }\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /** On each keystroke */\r\n  #aggressive: boolean = false;\r\n  /** Essentially on blur */\r\n  #lazy: boolean = false;\r\n  /** On form submission */\r\n  #passive: boolean = false;\r\n  /**\r\n   * @TODO Create easy mechanism for using \"eager\" validation.\r\n   *\r\n   * First, use passive.\r\n   * If invalid, use aggressive validation.\r\n   * When valid, use passive again.\r\n   */\r\n  eager: boolean = true;\r\n\r\n  /**\r\n   * Steps for using eager validation.\r\n   *\r\n   * 1. use passive until form is submitted.\r\n   *  - Must detect if form has been submited.\r\n   *\r\n   * 2. If form is invalid, use aggressive until field is valid.\r\n   *  - This is the hardest part.\r\n   *\r\n   * 3. When all valid, go back to passive validation.\r\n   */\r\n\r\n  input: boolean = false;\r\n  change: boolean = false;\r\n  submit: boolean = false;\r\n  blur: boolean = false;\r\n  focus: boolean = false;\r\n\r\n  click: boolean = false;\r\n  dblclick: boolean = false;\r\n  keydown: boolean = false;\r\n  keypress: boolean = false;\r\n  keyup: boolean = false;\r\n  mount: boolean = false;\r\n  mousedown: boolean = false;\r\n  mouseenter: boolean = false;\r\n  mouseleave: boolean = false;\r\n  mousemove: boolean = false;\r\n  mouseout: boolean = false;\r\n  mouseover: boolean = false;\r\n  mouseup: boolean = false;\r\n}\r\n\r\nexport type LinkValuesOnEvent = \"all\" | \"field\";\r\n\r\n//#endregion\r\n\r\n// #region Misc\r\n\r\n/**\r\n * If the user is passing in a plain json model, we use this data shape for\r\n * field configuration setup and layout.\r\n */\r\nexport type FormFieldSchema = Record<string, Partial<FieldConfig<Object>>>;\r\n\r\nexport type FieldNode<T extends Object> = (\r\n  | HTMLInputElement\r\n  | HTMLFieldSetElement\r\n  | HTMLButtonElement\r\n  | HTMLSelectElement\r\n  | HTMLTextAreaElement\r\n  | HTMLOutputElement\r\n) & { name: keyof T; type: string };\r\n\r\nexport type ElementEvent = InputEvent & {\r\n  target: { value: any; checked: boolean };\r\n};\r\n\r\n/**\r\n * These are the accepted data types used when processing\r\n * event.target.value output.\r\n */\r\nexport type AcceptedDataType =\r\n  | \"text\"\r\n  | \"string\"\r\n  | \"number\"\r\n  | \"boolean\"\r\n  | \"array\"\r\n  | \"file\"\r\n  | \"files\"\r\n  | \"any\";\r\n\r\n/**\r\n * Keeping it simple. Just keep up with model and errors.\r\n */\r\nexport type InitialFormState<ModelType extends Object> = {\r\n  model: ModelType | Object | undefined;\r\n  errors: ValidationError[] | undefined;\r\n};\r\n\r\n/**\r\n * Data format for the reference data items\r\n * Form.refs are of type Record<string, ReferenceDataItem[]>\r\n */\r\nexport interface ReferenceDataItem {\r\n  label: string;\r\n  value: any;\r\n  meta?: any;\r\n}\r\n\r\n/** Helpful shape for loading in reference data for the Form */\r\nexport type ReferenceData = Record<string, ReferenceDataItem[]>;\r\n\r\n/** This gives us a pretty exhaustive typesafe map of element attributes */\r\nexport type FieldAttributes = Record<ElementAttributesMap & string, any>;\r\n\r\n/** This provides solid type completion for field attributes */\r\nexport type ElementAttributesMap =\r\n  | keyof HTMLElement\r\n  | keyof HTMLInputElement\r\n  | keyof HTMLSelectElement\r\n  | keyof HTMLFieldSetElement\r\n  | keyof HTMLImageElement\r\n  | keyof HTMLOutputElement\r\n  | keyof HTMLButtonElement\r\n  | keyof HTMLCanvasElement\r\n  | keyof HTMLOptionElement\r\n  | keyof AriaAttributes;\r\n\r\n/** Catchall type for giving callbacks a bit more typesafety */\r\nexport type Callback =\r\n  | ((...args: any[]) => any)\r\n  | (() => any)\r\n  | void\r\n  | undefined\r\n  | boolean\r\n  | string\r\n  | Promise<any>;\r\n\r\n/**\r\n * All the WAI-ARIA 1.1 attributes from https://www.w3.org/TR/wai-aria-1.1/\r\n * This is here because there is no AriaAttrubutes type in the default library.\r\n */\r\ninterface AriaAttributes {\r\n  /** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */\r\n  \"aria-activedescendant\"?: string;\r\n  /** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */\r\n  \"aria-atomic\"?: boolean | \"false\" | \"true\";\r\n  /**\r\n   * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\r\n   * presented if they are made.\r\n   */\r\n  \"aria-autocomplete\"?: \"none\" | \"inline\" | \"list\" | \"both\";\r\n  /** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */\r\n  \"aria-busy\"?: boolean | \"false\" | \"true\";\r\n  /**\r\n   * Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\r\n   * @see aria-pressed @see aria-selected.\r\n   */\r\n  \"aria-checked\"?: boolean | \"false\" | \"mixed\" | \"true\";\r\n  /**\r\n   * Defines the total number of columns in a table, grid, or treegrid.\r\n   * @see aria-colindex.\r\n   */\r\n  \"aria-colcount\"?: number;\r\n  /**\r\n   * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\r\n   * @see aria-colcount @see aria-colspan.\r\n   */\r\n  \"aria-colindex\"?: number;\r\n  /**\r\n   * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\r\n   * @see aria-colindex @see aria-rowspan.\r\n   */\r\n  \"aria-colspan\"?: number;\r\n  /**\r\n   * Identifies the element (or elements) whose contents or presence are controlled by the current element.\r\n   * @see aria-owns.\r\n   */\r\n  \"aria-controls\"?: string;\r\n  /** Indicates the element that represents the current item within a container or set of related elements. */\r\n  \"aria-current\"?:\r\n    | boolean\r\n    | \"false\"\r\n    | \"true\"\r\n    | \"page\"\r\n    | \"step\"\r\n    | \"location\"\r\n    | \"date\"\r\n    | \"time\";\r\n  /**\r\n   * Identifies the element (or elements) that describes the object.\r\n   * @see aria-labelledby\r\n   */\r\n  \"aria-describedby\"?: string;\r\n  /**\r\n   * Identifies the element that provides a detailed, extended description for the object.\r\n   * @see aria-describedby.\r\n   */\r\n  \"aria-details\"?: string;\r\n  /**\r\n   * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\r\n   * @see aria-hidden @see aria-readonly.\r\n   */\r\n  \"aria-disabled\"?: boolean | \"false\" | \"true\";\r\n  /**\r\n   * Indicates what functions can be performed when a dragged object is released on the drop target.\r\n   * @deprecated in ARIA 1.1\r\n   */\r\n  \"aria-dropeffect\"?: \"none\" | \"copy\" | \"execute\" | \"link\" | \"move\" | \"popup\";\r\n  /**\r\n   * Identifies the element that provides an error message for the object.\r\n   * @see aria-invalid @see aria-describedby.\r\n   */\r\n  \"aria-errormessage\"?: string;\r\n  /** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */\r\n  \"aria-expanded\"?: boolean | \"false\" | \"true\";\r\n  /**\r\n   * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\r\n   * allows assistive technology to override the general default of reading in document source order.\r\n   */\r\n  \"aria-flowto\"?: string;\r\n  /**\r\n   * Indicates an element's \"grabbed\" state in a drag-and-drop operation.\r\n   * @deprecated in ARIA 1.1\r\n   */\r\n  \"aria-grabbed\"?: boolean | \"false\" | \"true\";\r\n  /** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */\r\n  \"aria-haspopup\"?:\r\n    | boolean\r\n    | \"false\"\r\n    | \"true\"\r\n    | \"menu\"\r\n    | \"listbox\"\r\n    | \"tree\"\r\n    | \"grid\"\r\n    | \"dialog\";\r\n  /**\r\n   * Indicates whether the element is exposed to an accessibility API.\r\n   * @see aria-disabled.\r\n   */\r\n  \"aria-hidden\"?: boolean | \"false\" | \"true\";\r\n  /**\r\n   * Indicates the entered value does not conform to the format expected by the application.\r\n   * @see aria-errormessage.\r\n   */\r\n  \"aria-invalid\"?: boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\";\r\n  /** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */\r\n  \"aria-keyshortcuts\"?: string;\r\n  /**\r\n   * Defines a string value that labels the current element.\r\n   * @see aria-labelledby.\r\n   */\r\n  \"aria-label\"?: string;\r\n  /**\r\n   * Identifies the element (or elements) that labels the current element.\r\n   * @see aria-describedby.\r\n   */\r\n  \"aria-labelledby\"?: string;\r\n  /** Defines the hierarchical level of an element within a structure. */\r\n  \"aria-level\"?: number;\r\n  /** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */\r\n  \"aria-live\"?: \"off\" | \"assertive\" | \"polite\";\r\n  /** Indicates whether an element is modal when displayed. */\r\n  \"aria-modal\"?: boolean | \"false\" | \"true\";\r\n  /** Indicates whether a text box accepts multiple lines of input or only a single line. */\r\n  \"aria-multiline\"?: boolean | \"false\" | \"true\";\r\n  /** Indicates that the user may select more than one item from the current selectable descendants. */\r\n  \"aria-multiselectable\"?: boolean | \"false\" | \"true\";\r\n  /** Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous. */\r\n  \"aria-orientation\"?: \"horizontal\" | \"vertical\";\r\n  /**\r\n   * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\r\n   * between DOM elements where the DOM hierarchy cannot be used to represent the relationship.\r\n   * @see aria-controls.\r\n   */\r\n  \"aria-owns\"?: string;\r\n  /**\r\n   * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\r\n   * A hint could be a sample value or a brief description of the expected format.\r\n   */\r\n  \"aria-placeholder\"?: string;\r\n  /**\r\n   * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\r\n   * @see aria-setsize.\r\n   */\r\n  \"aria-posinset\"?: number;\r\n  /**\r\n   * Indicates the current \"pressed\" state of toggle buttons.\r\n   * @see aria-checked @see aria-selected.\r\n   */\r\n  \"aria-pressed\"?: boolean | \"false\" | \"mixed\" | \"true\";\r\n  /**\r\n   * Indicates that the element is not editable, but is otherwise operable.\r\n   * @see aria-disabled.\r\n   */\r\n  \"aria-readonly\"?: boolean | \"false\" | \"true\";\r\n  /**\r\n   * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\r\n   * @see aria-atomic.\r\n   */\r\n  \"aria-relevant\"?:\r\n    | \"additions\"\r\n    | \"additions removals\"\r\n    | \"additions text\"\r\n    | \"all\"\r\n    | \"removals\"\r\n    | \"removals additions\"\r\n    | \"removals text\"\r\n    | \"text\"\r\n    | \"text additions\"\r\n    | \"text removals\";\r\n  /** Indicates that user input is required on the element before a form may be submitted. */\r\n  \"aria-required\"?: boolean | \"false\" | \"true\";\r\n  /** Defines a human-readable, author-localized description for the role of an element. */\r\n  \"aria-roledescription\"?: string;\r\n  /**\r\n   * Defines the total number of rows in a table, grid, or treegrid.\r\n   * @see aria-rowindex.\r\n   */\r\n  \"aria-rowcount\"?: number;\r\n  /**\r\n   * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\r\n   * @see aria-rowcount @see aria-rowspan.\r\n   */\r\n  \"aria-rowindex\"?: number;\r\n  /**\r\n   * Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\r\n   * @see aria-rowindex @see aria-colspan.\r\n   */\r\n  \"aria-rowspan\"?: number;\r\n  /**\r\n   * Indicates the current \"selected\" state of various widgets.\r\n   * @see aria-checked @see aria-pressed.\r\n   */\r\n  \"aria-selected\"?: boolean | \"false\" | \"true\";\r\n  /**\r\n   * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\r\n   * @see aria-posinset.\r\n   */\r\n  \"aria-setsize\"?: number;\r\n  /** Indicates if items in a table or grid are sorted in ascending or descending order. */\r\n  \"aria-sort\"?: \"none\" | \"ascending\" | \"descending\" | \"other\";\r\n  /** Defines the maximum allowed value for a range widget. */\r\n  \"aria-valuemax\"?: number;\r\n  /** Defines the minimum allowed value for a range widget. */\r\n  \"aria-valuemin\"?: number;\r\n  /**\r\n   * Defines the current value for a range widget.\r\n   * @see aria-valuetext.\r\n   */\r\n  \"aria-valuenow\"?: number;\r\n  /** Defines the human readable text alternative of aria-valuenow for a range widget. */\r\n  \"aria-valuetext\"?: string;\r\n}\r\n\r\n/**\r\n * @depricated makes the for_form functionality wayyy to clunky\r\n * \r\n * These are the types of form meta-data allowed.\r\n * If you would like something further, push it into the \"object\" field\r\n */\r\n//  export type FormMetaDataKeys =\r\n//  | \"for_form\"\r\n//  | \"description\"\r\n//  | \"header\"\r\n//  | \"label\"\r\n//  | \"classes\"\r\n//  | \"styles\"\r\n//  /**\r\n//   * Added \"object\" so a user can pass anything they want, while still getting\r\n//   * some type completion on the rest of the meta-data\r\n//   */\r\n//  | \"object\";\r\n\r\n//#endregion\r\n","import { SvelteComponent, SvelteComponentDev } from \"svelte/internal\";\r\nimport { get, writable, Writable } from \"svelte/store\";\r\nimport {\r\n  _addCallbackToField,\r\n  _attachEventListeners,\r\n  _buildFormFields,\r\n  _buildFormFieldsWithSchema,\r\n  _executeValidationEvent,\r\n  _get,\r\n  _handleEagerValidationSetup,\r\n  _hanldeFieldGroups,\r\n  _linkAllErrors,\r\n  _linkAllValues,\r\n  _resetState,\r\n  _setFieldAttributes,\r\n  _setFieldOrder,\r\n  _setInitialState\r\n} from \"../utilities\";\r\nimport { FieldConfig } from \"./FieldConfig\";\r\nimport {\r\n  Callback,\r\n  ElementEvent,\r\n  FieldNode,\r\n  FormFieldSchema,\r\n  InitialFormState,\r\n  OnEvents,\r\n  ReferenceData,\r\n  ValidationCallback,\r\n  ValidationError,\r\n  ValidationProperties\r\n} from \"./Types\";\r\n\r\n/**\r\n * @Recomended_Use\r\n *  - Initialize let form = new Form(model, {refs: REFS, template: TEMPLATE, etc.})\r\n *  - Set the model (if you didn't in the first step)\r\n *  - Attach reference data (if you didn't in the first step)\r\n *  - Storify the form - check example.form.ts for an example\r\n *  - Now you're ready to use the form!\r\n *  - Pass it into the DynamicForm component and let the form generate itself!\r\n *\r\n * Performance is blazing with < 500 fields.\r\n * Can render up to 2000 inputs in per class/fields, not recommended.\r\n * Just break it up into 100 or so fields per form (max 250) if its a huge form.\r\n * Use one of the Form Manager interfaces if applicable.\r\n *  - Tested on late 2014 mbp - 2.5ghz core i7, 16gb ram\r\n *\r\n * @TODO Time to redo the readme.md file! Lots have changed since then!\r\n *\r\n * @TODO Add more superstruct examples for each form type (this should show how easy the template pattern really is)\r\n * @TODO Add that aggressive/lazy/passive validation thing.\r\n * @TODO Add cypress tests!\r\n *\r\n * @TODO Add debug mode to inspect event listeners and form state snapshots\r\n *\r\n */\r\n\r\nexport function newForm<ModelType extends Object>(\r\n  model: ModelType,\r\n  validation_options?: Partial<ValidationProperties<ModelType>>,\r\n  form_properties?: Partial<Form<ModelType>>\r\n): Writable<Form<ModelType>> {\r\n  const form = new Form(model, validation_options, form_properties);\r\n  return writable(form);\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n * Formvana Form Class\r\n *\r\n * Main Concept: fields and model are separate.\r\n * Fields are built from the model, via the @field() decorator.\r\n * We keep the fields and the model in sync via model property names\r\n * and field[name].\r\n *\r\n * Form is NOT initially valid.\r\n *\r\n * Functions are camelCase.\r\n * Variables and stores are snake_case.\r\n * Everyone will love it.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\nexport class Form<ModelType extends Object> {\r\n  constructor(\r\n    model: ModelType,\r\n    validation_options?: Partial<ValidationProperties<ModelType>> | Object,\r\n    form_properties?: Partial<Form<ModelType>>\r\n  ) {\r\n    if (form_properties) Object.assign(this, form_properties);\r\n\r\n    /** If there's a model, set the inital state's and build the fields */\r\n    if (model) {\r\n      this.model = model;\r\n      this.buildFields();\r\n    } else {\r\n      throw new Error(\"Model is not valid. Please use a valid (truthy) model.\");\r\n    }\r\n\r\n    if (validation_options) {\r\n      Object.assign(this.validation_options, validation_options);\r\n    } else {\r\n      console.warn(\"No ValidationProperties have been added.\");\r\n    }\r\n\r\n    if (this.refs) this.attachReferenceData();\r\n\r\n    if (this.disabled_fields)\r\n      _setFieldAttributes(this.disabled_fields, this.fields, {\r\n        disabled: true,\r\n        attributes: { disabled: true },\r\n      });\r\n\r\n    if (this.hidden_fields)\r\n      _setFieldAttributes(this.hidden_fields, this.fields, {\r\n        hidden: true,\r\n      });\r\n\r\n    /** Wait until everything is initalized, then set the inital state. */\r\n    _setInitialState(this, this.initial_state);\r\n  }\r\n\r\n  //#region ---------------- Fields ----------------\r\n\r\n  /**\r\n   * HTML Node of form object.\r\n   */\r\n  node?: HTMLFormElement;\r\n\r\n  /**\r\n   * This is your form Model/Schema.\r\n   * Used to build the form.fields.\r\n   */\r\n  model: ModelType;\r\n\r\n  /**\r\n   * Fields are built using model's reflection metadata.\r\n   * Or using an array of field configuration objects.\r\n   */\r\n  fields: Array<FieldConfig<ModelType>> = [];\r\n\r\n  /**\r\n   * Errors are attached to their corresponding fields.\r\n   * This pattern adds flexibility at the cost of a little complexity and\r\n   * object size.\r\n   *\r\n   * When a single field is validated, the whole model is validated (if\r\n   * using class-validator).\r\n   * We don't show all the errors to the user, only the field emmiting the\r\n   * event.\r\n   * This way, we know if the form is still invalid, even if we aren't\r\n   * showing the user any errors (like, pre-submit-button press).\r\n   */\r\n  errors: ValidationError[] = [];\r\n\r\n  /**\r\n   * validation_options contains the logic and configuration for\r\n   * validating the form as well as linking errors to fields\r\n   * and displaying the errors\r\n   */\r\n  validation_options?: ValidationProperties<ModelType> =\r\n    new ValidationProperties<ModelType>();\r\n\r\n  /** Which events should the form dispatch side effects? */\r\n  on_events: OnEvents<HTMLElementEventMap> = new OnEvents();\r\n\r\n  /** Is the form valid? */\r\n  valid: Writable<boolean> = writable(false);\r\n  /** Has the form state changed from it's initial value? */\r\n  changed: Writable<boolean> = writable(false);\r\n  /** Has the form been altered in any way? */\r\n  pristine: Writable<boolean> = writable(true);\r\n  /** Is the form loading? */\r\n  loading: Writable<boolean> = writable(false);\r\n\r\n  /**\r\n   * refs hold any reference data you'll be using in the form\r\n   *\r\n   * Call attachReferenceData() to link reference data to form or pass it\r\n   * via the constrictor.\r\n   *\r\n   * Fields & reference data are linked via field.ref_key\r\n   *\r\n   * * Format:\r\n   * * {[ref_key]: string, Array<{[label]: string, [value]: any, [data]?: any}>}\r\n   *\r\n   * @UseCase seclet dropdowns, radio buttons, etc.\r\n   */\r\n  refs?: ReferenceData;\r\n\r\n  /**\r\n   * Form Template Layout\r\n   *\r\n   * Render the form into a custom svelte template!\r\n   * Use a svelte component. Or use a string as the selector.\r\n   * * The template/component must accept {form} prop\r\n   *\r\n   * Note: add ` types\": [\"svelte\"] ` to tsconfig compilerOptions\r\n   * to remove TS import error of .svelte files (for your template)\r\n   */\r\n  template?:\r\n    | string\r\n    | typeof SvelteComponentDev\r\n    | typeof SvelteComponent\r\n    | typeof SvelteComponent;\r\n\r\n  /**\r\n   * This is the form's initial state.\r\n   * It's only initial model and errors.\r\n   * We're keeping this simple.\r\n   */\r\n  initial_state: InitialFormState<ModelType> = {\r\n    model: {},\r\n    errors: undefined,\r\n  };\r\n\r\n  /**\r\n   * Emits value changes as a plain JS object.\r\n   * Format: { [field.name]: value }\r\n   *\r\n   * Very similar to Angular form.valueChanges\r\n   */\r\n  value_changes: Writable<\r\n    Record<keyof ModelType | any, ModelType[keyof ModelType]>\r\n  > = writable({});\r\n\r\n  /**\r\n   * Optional field layout, if you aren't using a class object.\r\n   * \"no-class\" method of building the fields.\r\n   */\r\n  field_schema?: FormFieldSchema;\r\n\r\n  /**\r\n   * This allows you to filter fields based on a given form name.\r\n   *\r\n   * @example user model can be used for login and signup\r\n   * @example for_form=\"login\" && for_form=\"signup\"\r\n   */\r\n  for_form?: string;\r\n\r\n  /**\r\n   * Any extra data you may want to pass around.\r\n   * @examples description, name, type, header, label, classes, etc.\r\n   */\r\n  meta?: Record<string, any>;\r\n\r\n  /** Use the NAME of the field (field.name) to disable/hide the field. */\r\n  hidden_fields?: Array<keyof ModelType>;\r\n  /** Use the NAME of the field (field.name) to disable/hide the field. */\r\n  disabled_fields?: Array<keyof ModelType>;\r\n\r\n  /**\r\n   * Determines the ordering of this.fields.\r\n   * Simply an array of field names (or group names or stepper names)\r\n   * in the order to be displayed\r\n   */\r\n  #field_order?: Array<keyof ModelType>;\r\n\r\n  /**\r\n   * We keep track of required fields because validation handles everything\r\n   * except *required* (field.required)\r\n   * @example If there are no required fields, but there ARE errors, the form is still\r\n   * valid. Get it?\r\n   *\r\n   * Keeping track of the required fields allows us to  validate faster.\r\n   */\r\n  #required_fields: Array<keyof ModelType> = [];\r\n\r\n  //#endregion xxxxxxxxxxxxxxxx Fields xxxxxxxxxxxxxxxx\r\n\r\n  // #region ---------------- Form API ----------------\r\n\r\n  // #region - Form Setup\r\n\r\n  /**\r\n   * Builds the fields from the model.\r\n   * Builds the field configs via this.model using metadata-reflection.\r\n   * Or via form.field_shcema\r\n   */\r\n  buildFields = (model: ModelType = this.model): Form<ModelType> => {\r\n    if (this.field_schema) {\r\n      this.fields = _buildFormFieldsWithSchema(\r\n        this.field_schema,\r\n        this.for_form\r\n      );\r\n    } else {\r\n      this.fields = _buildFormFields(model, this.for_form);\r\n    }\r\n\r\n    this.#required_fields = this.fields\r\n      .filter((f) => f.required)\r\n      .map((f) => f.name as keyof ModelType);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * * Required for form setup.\r\n   *\r\n   * ATTACH TO SAME ELEMENT AS FIELD.NAME {name}!\r\n   * This hooks up the event listeners!\r\n   *\r\n   * Used to grab fields and attach event listeners to each field.\r\n   * Simply loop over the model, checking the form's node\r\n   * for each model[name]. If a field element is found, then\r\n   * attach on_event listeners to the given field.\r\n   *\r\n   * This is for Svelte's \"use:FUNCTION\" feature.\r\n   * The \"use\" directive passes the HTML Node as a parameter\r\n   * to the given function (e.g. use:useField(node: HTMLElement)).\r\n   */\r\n  useForm = (node: HTMLFormElement) => {\r\n    this.node = node;\r\n\r\n    /** Set up form/fields here */\r\n    let key: keyof ModelType;\r\n    for (key in this.model) {\r\n      const elements = node.querySelectorAll(`[name=\"${key}\"]`);\r\n\r\n      if (elements && elements.length === 1) {\r\n        const element = elements[0];\r\n        this.useField(element as FieldNode<ModelType>);\r\n      } else if (elements.length > 1) {\r\n        elements.forEach((element) => {\r\n          this.useField(element as FieldNode<ModelType>);\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.on_events.eager)\r\n      _handleEagerValidationSetup(this, this.node, this.#required_fields);\r\n\r\n    if (this.validation_options?.error_display !== \"constraint\")\r\n      this.node.noValidate = true;\r\n  };\r\n\r\n  /**\r\n   * This is used to hook up event listeners to a field.\r\n   *\r\n   * You can also use this to add form controls to the Form class.\r\n   * @example form control is outside of the form element so\r\n   * use:useField is added to the element to hook enent listens into it,\r\n   * same as all other controls inside the form element\r\n   */\r\n  useField = (node: FieldNode<ModelType>): FieldConfig<ModelType> => {\r\n    /** Attach HTML Node to field so we can remove event listeners later */\r\n    const field = _get(node.name, this.fields);\r\n    field.node = node;\r\n\r\n    if (this.on_events)\r\n      _attachEventListeners(field, this.on_events, (e: ElementEvent) =>\r\n        _executeValidationEvent(\r\n          this,\r\n          this.#required_fields,\r\n          field,\r\n          undefined,\r\n          e\r\n        )\r\n      );\r\n    return field;\r\n  };\r\n\r\n  //#endregion\r\n\r\n  // #region - Validation\r\n\r\n  /**\r\n   * Validate the form!\r\n   * You can pass in callbacks as needed.\r\n   * Callbacks can be called \"before\" or \"after\" validation.\r\n   */\r\n  validate = (\r\n    callbacks?: ValidationCallback[]\r\n  ): Promise<ValidationError[]> | undefined => {\r\n    return _executeValidationEvent(\r\n      this,\r\n      this.#required_fields,\r\n      undefined,\r\n      callbacks\r\n    );\r\n  };\r\n\r\n  /** If want to (in)validate a specific field for any reason */\r\n  validateField = (\r\n    field_name: keyof ModelType,\r\n    with_message?: string,\r\n    callbacks?: ValidationCallback[]\r\n  ): void => {\r\n    const field = _get(field_name, this.fields);\r\n    if (!with_message) {\r\n      _executeValidationEvent(this, this.#required_fields, field, callbacks);\r\n    } else {\r\n      const err = new ValidationError(\r\n        field_name as string,\r\n        { error: with_message },\r\n        { value: get(field.value) }\r\n      );\r\n      this.errors.push(err);\r\n      if (this.node)\r\n        _linkAllErrors(\r\n          this.errors,\r\n          this.fields,\r\n          this.validation_options?.error_display,\r\n          this.node\r\n        );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Attach a callback to a field or array of fields.\r\n   * If the callback if type ValidationCallback it will be added\r\n   * to the validation handler\r\n   */\r\n  attachCallbacks = (\r\n    event: keyof HTMLElementEventMap,\r\n    callback: Callback | ValidationCallback,\r\n    field_names: keyof ModelType | Array<keyof ModelType>\r\n  ): void => {\r\n    /** If there are multiple fields passed in then loop over to add callbacks */\r\n    if (Array.isArray(field_names)) {\r\n      const fields = field_names.map((f) => _get(f, this.fields));\r\n      fields.forEach((f) =>\r\n        _addCallbackToField(this, f, event, callback, this.#required_fields)\r\n      );\r\n    } else {\r\n      /** If there is one field, add callback to field */\r\n      const field = _get(field_names, this.fields);\r\n      _addCallbackToField(this, field, event, callback, this.#required_fields);\r\n    }\r\n  };\r\n\r\n  /** Clear ALL the errors. */\r\n  clearErrors = (): void => {\r\n    this.errors = [];\r\n    this.fields.forEach((f) => {\r\n      f.clearErrors();\r\n    });\r\n  };\r\n\r\n  //#endregion\r\n\r\n  // #region - Utility Methods\r\n\r\n  /** Get Field by name */\r\n  get = <T extends ModelType>(field_name: keyof T): FieldConfig<T> =>\r\n    _get(field_name, this.fields);\r\n\r\n  /**\r\n   * Load new data into the form and build the fields.\r\n   * Data is updated IN PLACE by default.\r\n   * Reinitialize is set to false, by default.\r\n   *\r\n   * Inital State is not updated by default.\r\n   */\r\n  loadModel = <T extends ModelType>(\r\n    model: T,\r\n    reinitialize: boolean = false,\r\n    update_initial_state: boolean = false\r\n  ): Form<ModelType> => {\r\n    if (reinitialize) {\r\n      this.model = model;\r\n      this.buildFields();\r\n    } else {\r\n      let key: keyof ModelType;\r\n      for (key in this.model) {\r\n        this.model[key] = model[key];\r\n      }\r\n      _linkAllValues(false, this.fields, this.model);\r\n    }\r\n\r\n    if (update_initial_state) this.updateInitialState();\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Set the value for a field or set of fields.\r\n   * Sets both field.value and model value.\r\n   */\r\n  setValue = (\r\n    field_names: Array<keyof ModelType> | keyof ModelType,\r\n    value: any\r\n  ): void => {\r\n    if (Array.isArray(field_names)) {\r\n      field_names.forEach((f) => {\r\n        const field = _get(f, this.fields);\r\n        field.value.set(value);\r\n        this.model[f] = value;\r\n      });\r\n    } else {\r\n      const field = _get(field_names, this.fields);\r\n      field.value.set(value);\r\n      this.model[field_names] = value;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Pass in the reference data to add options to fields.\r\n   */\r\n  attachReferenceData = (refs?: ReferenceData): void => {\r\n    /** Get all fields with ref_key property */\r\n    const fields_with_ref_keys = this.fields.filter((f) => f.ref_key);\r\n    /** Check if there are refs being passed in */\r\n    if (refs) {\r\n      this.refs = refs;\r\n      fields_with_ref_keys.forEach((field) => {\r\n        if (field.ref_key) field.options = refs[field.ref_key];\r\n      });\r\n    } else if (this.refs) {\r\n      /** Else if this.refs are already attached, add the options to fields */\r\n      fields_with_ref_keys.forEach((field) => {\r\n        if (field.ref_key && this.refs)\r\n          field.options = this.refs[field.ref_key];\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *! Make sure to call this when the component is unloaded/destroyed\r\n   * Removes all event listeners.\r\n   */\r\n  destroy = (): void => {\r\n    if (this.fields && this.fields.length > 0) {\r\n      // For each field...\r\n      this.fields.forEach((f) => {\r\n        // Remove all the event listeners!\r\n        if (this.on_events)\r\n          Object.keys(this.on_events).forEach((key) => {\r\n            f.node &&\r\n              f.node.removeEventListener(key, (ev: Event) =>\r\n                _executeValidationEvent(\r\n                  this,\r\n                  this.#required_fields,\r\n                  f,\r\n                  undefined,\r\n                  ev as ElementEvent\r\n                )\r\n              );\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  //#endregion\r\n\r\n  // #region - Form State\r\n\r\n  /**\r\n   * Resets to the inital state of the form.\r\n   *\r\n   * Only model and errors are saved in initial state.\r\n   */\r\n  reset = (): void => {\r\n    _resetState(this, this.initial_state);\r\n  };\r\n\r\n  /** Well, this updates the initial state of the form. */\r\n  updateInitialState = (): void => {\r\n    _setInitialState(this, this.initial_state);\r\n    this.changed.set(false);\r\n  };\r\n\r\n  //#endregion\r\n\r\n  // #region - Layout\r\n\r\n  getFieldGroups = (): Array<\r\n    FieldConfig<ModelType> | Array<FieldConfig<ModelType>>\r\n  > => {\r\n    return _hanldeFieldGroups(this.fields);\r\n  };\r\n\r\n  /**\r\n   * Set the field order.\r\n   * Layout param is simply an array of field (or group)\r\n   * names in the order to be displayed.\r\n   * Leftover fields are appended to bottom of form.\r\n   */\r\n  setFieldOrder = (order: Array<keyof ModelType>): void => {\r\n    if (order && order.length > 0) {\r\n      this.#field_order = order;\r\n      this.fields = _setFieldOrder(this.#field_order, this.fields);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set attributes on a given set of fields.\r\n   *\r\n   * @exapmle to hide several fields:\r\n   * names = [field.name, field.name],\r\n   * attributes = { hidden: true };\r\n   */\r\n  setFieldAttributes = (\r\n    names: string | Array<keyof ModelType>,\r\n    attributes: Partial<FieldConfig<ModelType>>\r\n  ): void => {\r\n    if (names) {\r\n      if (Array.isArray(names)) {\r\n        _setFieldAttributes(names, this.fields, attributes);\r\n      } else {\r\n        _setFieldAttributes(\r\n          [names as keyof ModelType],\r\n          this.fields,\r\n          attributes\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#endregion xxxxxxxxxxxxxxxx Form API xxxxxxxxxxxxxxxx\r\n}\r\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import \"reflect-metadata\";\r\nimport { FieldConfig } from \"./FieldConfig\";\r\n\r\nexport function field<T extends Object>(config: Partial<FieldConfig<T>>) {\r\n  return function (target: any, propertyKey: string) {\r\n    let properties: string[] =\r\n      Reflect.getMetadata(\"editableProperties\", target) || [];\r\n\r\n    if (properties.indexOf(propertyKey) < 0) {\r\n      properties.push(propertyKey);\r\n    }\r\n    Reflect.defineMetadata(\"editableProperties\", properties, target);\r\n\r\n    Reflect.defineMetadata(\"fieldConfig\", config, target, propertyKey);\r\n  };\r\n}\r\n\r\n// export function editable(target: any, propertyKey: string) {\r\n//   let properties: string[] =\r\n//     Reflect.getMetadata(\"editableProperties\", target) || [];\r\n\r\n//   if (properties.indexOf(propertyKey) < 0) {\r\n//     properties.push(propertyKey);\r\n//   }\r\n\r\n//   Reflect.defineMetadata(\"editableProperties\", properties, target);\r\n// }\r\n","import { get, writable, Writable } from \"svelte/store\";\r\nimport { Form } from \"./Form\";\r\nimport { ValidationCallback } from \"./Types\";\r\n\r\n/**\r\n * ---------------------------------------------------------------------------\r\n *\r\n * Multi-Form Management Helpers\r\n *\r\n * These interfaces/classes are meant to aid when using multiple Form objects.\r\n * Such as when several forms need to be grouped together or made into a\r\n * stepper/wizard.\r\n *\r\n * Classes are below the FormManager interface.\r\n *\r\n * ---------------------------------------------------------------------------\r\n */\r\n\r\ntype FormDictionary = Array<Form<any>>;\r\n\r\n/**\r\n * Base interface for managing multiple instances of Form\r\n * classes.\r\n */\r\nexport class FormManager {\r\n  constructor(forms: FormDictionary, props?: Partial<FormManager>) {\r\n    if (forms) this.forms = forms;\r\n    if (props) Object.assign(this, props);\r\n\r\n    this.#getAllValueChanges();\r\n    this.#getAllValid();\r\n    this.#getAllChanged();\r\n    this.#getAllPristine();\r\n  }\r\n\r\n  /** Collection of Forms */\r\n  forms: FormDictionary = [];\r\n\r\n  loading: Writable<boolean> = writable(false);\r\n\r\n  all_value_changes: Writable<Record<string, any>> = writable({});\r\n\r\n  all_valid: Writable<boolean> = writable(false);\r\n\r\n  any_changed: Writable<boolean> = writable(false);\r\n\r\n  all_pristine: Writable<boolean> = writable(false);\r\n\r\n  #all_valid_list: Record<number, boolean> = {};\r\n  #all_changed_list: Record<number, boolean> = {};\r\n  #all_pristine_list: Record<number, boolean> = {};\r\n\r\n  _subscriptions: any[] = [];\r\n\r\n  /** Validate a given form, a number of forms, or all forms */\r\n  validateAll = (\r\n    callbacks?: ValidationCallback[],\r\n    form_indexes?: number[]\r\n  ): void => {\r\n    if (form_indexes) {\r\n      form_indexes.forEach((index) => {\r\n        this.forms && this.forms[index].validate(callbacks);\r\n      });\r\n    } else {\r\n      let k: keyof FormDictionary;\r\n      for (k in this.forms) {\r\n        this.forms[k].validate(callbacks);\r\n      }\r\n    }\r\n  };\r\n\r\n  destroy = () => {\r\n    this.forms.forEach((f) => f.destroy());\r\n  };\r\n\r\n  destroySubscriptions = () => {\r\n    if (this._subscriptions && this._subscriptions.length > 0) {\r\n      this._subscriptions.forEach((unsub) => unsub());\r\n    }\r\n  };\r\n\r\n  resetAll = () => {\r\n    this.forms.forEach((f) => f.reset());\r\n  };\r\n\r\n  /** All value changes of all forms */\r\n  #getAllValueChanges = (): void => {\r\n    /** Set all_valid = true, then check if any forms are invalid */\r\n    // let changes: Writable<Record<string, any>> = writable({}),\r\n    let k: keyof FormDictionary,\r\n      i = 0;\r\n    for (k in this.forms) {\r\n      const id = `form_${i}`;\r\n\r\n      /** If even one of them is invalid, set all_valid to false */\r\n      if (`${get(this.forms[k].value_changes)}` !== \"{}\") {\r\n        const previous_changes = get(this.all_value_changes);\r\n\r\n        if (!previous_changes[id]) {\r\n          this.all_value_changes.set({ ...previous_changes, [id]: {} });\r\n        }\r\n\r\n        const unsubscriber = this.forms[k].value_changes.subscribe(\r\n          (_changes) => {\r\n            const _previous_changes = get(this.all_value_changes);\r\n            this.all_value_changes.set({\r\n              ..._previous_changes,\r\n              [id]: _changes,\r\n            });\r\n          }\r\n        );\r\n        this._subscriptions.push(unsubscriber);\r\n      }\r\n\r\n      i++;\r\n    }\r\n  };\r\n\r\n  /** Are all of the forms valid? */\r\n  #getAllValid = (): void => {\r\n    let k: keyof FormDictionary,\r\n      i = 0;\r\n    for (k in this.forms) {\r\n      const index = i;\r\n      const unsubscribe = this.forms[k].valid.subscribe((valid) => {\r\n        this.#all_valid_list[index] = valid;\r\n\r\n        if (Object.values(this.#all_valid_list).includes(false)) {\r\n          this.all_valid.set(false);\r\n        } else {\r\n          this.all_valid.set(true);\r\n        }\r\n      });\r\n      this._subscriptions.push(unsubscribe);\r\n      i++;\r\n    }\r\n  };\r\n\r\n  #getAllChanged = (): void => {\r\n    let k: keyof FormDictionary,\r\n      i = 0;\r\n    for (k in this.forms) {\r\n      const index = i;\r\n      const unsubscribe = this.forms[k].changed.subscribe((changed) => {\r\n        this.#all_changed_list[index] = changed;\r\n\r\n        if (Object.values(this.#all_changed_list).includes(true)) {\r\n          this.any_changed.set(true);\r\n        } else {\r\n          this.any_changed.set(false);\r\n        }\r\n      });\r\n      this._subscriptions.push(unsubscribe);\r\n      i++;\r\n    }\r\n  };\r\n\r\n  #getAllPristine = (): void => {\r\n    let k: keyof FormDictionary,\r\n      i = 0;\r\n    for (k in this.forms) {\r\n      const index = i;\r\n      const unsubscribe = this.forms[k].pristine.subscribe((pristine) => {\r\n        this.#all_pristine_list[index] = pristine;\r\n\r\n        if (Object.values(this.#all_pristine_list).includes(false)) {\r\n          this.all_pristine.set(false);\r\n        } else {\r\n          this.all_pristine.set(true);\r\n        }\r\n      });\r\n      this._subscriptions.push(unsubscribe);\r\n      i++;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Collection of Forms used as steps.\r\n * @example a data collection wizard with many fields\r\n */\r\nexport class FormStepper extends FormManager {\r\n  constructor(forms: FormDictionary, props?: Partial<FormManager>) {\r\n    super(forms, props);\r\n  }\r\n\r\n  /** What step are we on currently? */\r\n  active_step: Writable<keyof FormDictionary> = writable(0);\r\n\r\n  /**\r\n   * You can attach data to each step of the stepper.\r\n   *\r\n   * In the example below step #0 has a title, description and instructions.\r\n   * @example { 0: {title: string, description: string, instructions: string} }\r\n   */\r\n  step_data?: Record<keyof FormDictionary, Object | string>;\r\n\r\n  /** Set active step index ++1 */\r\n  nextStep = () => {\r\n    const active_step = get(this.active_step);\r\n    /** If the active step type is number, increment it. */\r\n    if (typeof active_step === \"number\")\r\n      this.active_step.set((active_step as number) + 1);\r\n  };\r\n\r\n  /** Set active step index --1 */\r\n  backStep = () => {\r\n    const active_step = get(this.active_step);\r\n    /** If the active step type is number, decrement it. */\r\n    if (typeof active_step === \"number\")\r\n      this.active_step.set((active_step as number) - 1);\r\n  };\r\n\r\n  firstStep = () => {\r\n    if (typeof get(this.active_step) === \"number\") this.active_step.set(0);\r\n  };\r\n\r\n  lastStep = () => {\r\n    if (typeof get(this.active_step) === \"number\" && this.forms.length > 0)\r\n      this.active_step.set(this.forms.length - 1);\r\n  };\r\n}\r\n\r\n/**\r\n * Group of Forms which extends the FormManager functionality.\r\n */\r\nexport class FormGroup extends FormManager {\r\n  constructor(forms: FormDictionary, props?: Partial<FormManager>) {\r\n    super(forms, props);\r\n  }\r\n}\r\n"],"names":["get","Reflect","global"],"mappings":"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"}