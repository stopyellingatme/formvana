
{
	"compilerOptions": {
			"moduleResolution": "node",
			"target": "esnext",
			"module": "esnext",
			"pretty": true,
			/**
			 * Needed for @formvana to work with Typescript
			 */
			"experimentalDecorators": true,
			"emitDecoratorMetadata": true,
			/**
			 * svelte-preprocess cannot figure out whether you have
			 * a value or a type, so tell TypeScript to enforce using
			 * `import type` instead of `import` for Types.
			 */
			"importsNotUsedAsValues": "error",
			"isolatedModules": true,
			/**
			 * To have warnings / errors of the Svelte compiler at the
			 * correct position, enable source maps by default.
			 */
			"sourceMap": true,
			"esModuleInterop": true,
			"skipLibCheck": false,
			"forceConsistentCasingInFileNames": false,
			"baseUrl": "./",
			/**
			 * Typecheck JS in `.svelte` and `.js` files by default.
			 * Disable checkJs if you'd like to use dynamic types in JS.
			 * Note that setting allowJs false does not prevent the use
			 * of JS in `.svelte` files.
			 */
			"allowJs": true,
			"checkJs": true,
			"lib": [
					"es2018",
					"dom"
			],
			"types": [
					"svelte"
			]
	},
	/**
		 * Use globals.d.ts instead of compilerOptions.types
		 * to avoid limiting type declarations.
		 */
	"include": [
			"src/**/*.ts",
			"src/**/*.js",
			"src/**/*.svelte"
	],
	"exclude": [
			"node_modules"
	]
}